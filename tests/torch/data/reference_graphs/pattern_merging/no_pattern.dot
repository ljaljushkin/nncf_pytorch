strict digraph  {
"0 /A_0" [associated_ip_node_keys="{'POST HOOK 0 /A_0'}", is_merged=False, node_type="InsertionPointGraphNodeType.OPERATOR", regular_node_data="0 /A_0 A"];
"1 /conv2d_0" [associated_ip_node_keys="{'PRE HOOK 0 1 /conv2d_0', 'POST HOOK 1 /conv2d_0'}", is_merged=False, node_type="InsertionPointGraphNodeType.OPERATOR", regular_node_data="1 /conv2d_0 conv2d"];
"2 /C_0" [associated_ip_node_keys="{'PRE HOOK 0 2 /C_0', 'POST HOOK 2 /C_0'}", is_merged=False, node_type="InsertionPointGraphNodeType.OPERATOR", regular_node_data="2 /C_0 C"];
"3 /batch_norm_0" [associated_ip_node_keys="{'POST HOOK 3 /batch_norm_0', 'PRE HOOK 0 3 /batch_norm_0'}", is_merged=False, node_type="InsertionPointGraphNodeType.OPERATOR", regular_node_data="3 /batch_norm_0 batch_norm"];
"4 /D_0" [associated_ip_node_keys="{'PRE HOOK 0 4 /D_0', 'POST HOOK 4 /D_0'}", is_merged=False, node_type="InsertionPointGraphNodeType.OPERATOR", regular_node_data="4 /D_0 D"];
"5 /relu_0" [associated_ip_node_keys="{'PRE HOOK 0 5 /relu_0', 'POST HOOK 5 /relu_0'}", is_merged=False, node_type="InsertionPointGraphNodeType.OPERATOR", regular_node_data="5 /relu_0 relu"];
"6 /B_0" [associated_ip_node_keys="{'POST HOOK 6 /B_0', 'PRE HOOK 0 6 /B_0'}", is_merged=False, node_type="InsertionPointGraphNodeType.OPERATOR", regular_node_data="6 /B_0 B"];
"POST HOOK 0 /A_0" [insertion_point=<nncf.common.insertion_point_graph.PostHookInsertionPoint object at 0x7f983f8b0940>, node_type="InsertionPointGraphNodeType.POST_HOOK"];
"PRE HOOK 0 1 /conv2d_0" [insertion_point=<nncf.common.insertion_point_graph.PreHookInsertionPoint object at 0x7f983f8b0c70>, node_type="InsertionPointGraphNodeType.PRE_HOOK"];
"POST HOOK 1 /conv2d_0" [insertion_point=<nncf.common.insertion_point_graph.PostHookInsertionPoint object at 0x7f983f8b06a0>, node_type="InsertionPointGraphNodeType.POST_HOOK"];
"PRE HOOK 0 2 /C_0" [insertion_point=<nncf.common.insertion_point_graph.PreHookInsertionPoint object at 0x7f983f8b0070>, node_type="InsertionPointGraphNodeType.PRE_HOOK"];
"POST HOOK 2 /C_0" [insertion_point=<nncf.common.insertion_point_graph.PostHookInsertionPoint object at 0x7f983f8b0190>, node_type="InsertionPointGraphNodeType.POST_HOOK"];
"PRE HOOK 0 3 /batch_norm_0" [insertion_point=<nncf.common.insertion_point_graph.PreHookInsertionPoint object at 0x7f982510cbe0>, node_type="InsertionPointGraphNodeType.PRE_HOOK"];
"POST HOOK 3 /batch_norm_0" [insertion_point=<nncf.common.insertion_point_graph.PostHookInsertionPoint object at 0x7f982510cdc0>, node_type="InsertionPointGraphNodeType.POST_HOOK"];
"PRE HOOK 0 4 /D_0" [insertion_point=<nncf.common.insertion_point_graph.PreHookInsertionPoint object at 0x7f982510ca30>, node_type="InsertionPointGraphNodeType.PRE_HOOK"];
"POST HOOK 4 /D_0" [insertion_point=<nncf.common.insertion_point_graph.PostHookInsertionPoint object at 0x7f982510c640>, node_type="InsertionPointGraphNodeType.POST_HOOK"];
"PRE HOOK 0 5 /relu_0" [insertion_point=<nncf.common.insertion_point_graph.PreHookInsertionPoint object at 0x7f982510c340>, node_type="InsertionPointGraphNodeType.PRE_HOOK"];
"POST HOOK 5 /relu_0" [insertion_point=<nncf.common.insertion_point_graph.PostHookInsertionPoint object at 0x7f982510c730>, node_type="InsertionPointGraphNodeType.POST_HOOK"];
"PRE HOOK 0 6 /B_0" [insertion_point=<nncf.common.insertion_point_graph.PreHookInsertionPoint object at 0x7f982510c1f0>, node_type="InsertionPointGraphNodeType.PRE_HOOK"];
"POST HOOK 6 /B_0" [insertion_point=<nncf.common.insertion_point_graph.PostHookInsertionPoint object at 0x7f982510c250>, node_type="InsertionPointGraphNodeType.POST_HOOK"];
"0 /A_0" -> "POST HOOK 0 /A_0"  [is_integer=False];
"1 /conv2d_0" -> "POST HOOK 1 /conv2d_0"  [is_integer=False];
"2 /C_0" -> "POST HOOK 2 /C_0"  [is_integer=False];
"3 /batch_norm_0" -> "POST HOOK 3 /batch_norm_0"  [is_integer=False];
"4 /D_0" -> "POST HOOK 4 /D_0"  [is_integer=False];
"5 /relu_0" -> "POST HOOK 5 /relu_0"  [is_integer=False];
"6 /B_0" -> "POST HOOK 6 /B_0"  [is_integer=False];
"POST HOOK 0 /A_0" -> "PRE HOOK 0 1 /conv2d_0"  [input_port_id=0, is_integer=False];
"PRE HOOK 0 1 /conv2d_0" -> "1 /conv2d_0"  [input_port_id=0, is_integer=False];
"POST HOOK 1 /conv2d_0" -> "PRE HOOK 0 2 /C_0"  [input_port_id=0, is_integer=False];
"PRE HOOK 0 2 /C_0" -> "2 /C_0"  [input_port_id=0, is_integer=False];
"POST HOOK 2 /C_0" -> "PRE HOOK 0 3 /batch_norm_0"  [input_port_id=0, is_integer=False];
"PRE HOOK 0 3 /batch_norm_0" -> "3 /batch_norm_0"  [input_port_id=0, is_integer=False];
"POST HOOK 3 /batch_norm_0" -> "PRE HOOK 0 4 /D_0"  [input_port_id=0, is_integer=False];
"PRE HOOK 0 4 /D_0" -> "4 /D_0"  [input_port_id=0, is_integer=False];
"POST HOOK 4 /D_0" -> "PRE HOOK 0 5 /relu_0"  [input_port_id=0, is_integer=False];
"PRE HOOK 0 5 /relu_0" -> "5 /relu_0"  [input_port_id=0, is_integer=False];
"POST HOOK 5 /relu_0" -> "PRE HOOK 0 6 /B_0"  [input_port_id=0, is_integer=False];
"PRE HOOK 0 6 /B_0" -> "6 /B_0"  [input_port_id=0, is_integer=False];
}
