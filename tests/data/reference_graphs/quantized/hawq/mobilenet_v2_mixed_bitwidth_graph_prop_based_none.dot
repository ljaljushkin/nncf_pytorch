strict digraph  {
"0 /nncf_model_input" [id=0, label=nncf_model_input, scope="", style=filled, type=nncf_model_input];
"1 SymmetricQuantizer/symmetric_quantize" [color=orange, id=1, label="6_bit__AFQ_#0", scope=SymmetricQuantizer, style=filled, type=symmetric_quantize];
"2 MobileNetV2/Sequential[features]/ConvBNReLU[0]/NNCFConv2d[0]/ModuleDict[pre_ops]/UpdateWeight[0]/SymmetricQuantizer[op]/symmetric_quantize" [color=orange, id=2, label="6_bit__WFQ_#0", scope="MobileNetV2/Sequential[features]/ConvBNReLU[0]/NNCFConv2d[0]/ModuleDict[pre_ops]/UpdateWeight[0]/SymmetricQuantizer[op]", style=filled, type=symmetric_quantize];
"3 MobileNetV2/Sequential[features]/ConvBNReLU[0]/NNCFConv2d[0]/conv2d" [color=lightblue, id=3, label=conv2d, scope="MobileNetV2/Sequential[features]/ConvBNReLU[0]/NNCFConv2d[0]", style=filled, type=conv2d];
"4 MobileNetV2/Sequential[features]/ConvBNReLU[0]/BatchNorm2d[1]/batch_norm" [id=4, label=batch_norm, scope="MobileNetV2/Sequential[features]/ConvBNReLU[0]/BatchNorm2d[1]", style=filled, type=batch_norm];
"5 MobileNetV2/Sequential[features]/ConvBNReLU[0]/ReLU6[2]/hardtanh" [id=5, label=hardtanh, scope="MobileNetV2/Sequential[features]/ConvBNReLU[0]/ReLU6[2]", style=filled, type=hardtanh];
"6 MobileNetV2/Sequential[features]/ConvBNReLU[0]/ReLU6[2]/SymmetricQuantizer/symmetric_quantize" [color=orange, id=6, label="6_bit__AFQ_#1", scope="MobileNetV2/Sequential[features]/ConvBNReLU[0]/ReLU6[2]/SymmetricQuantizer", style=filled, type=symmetric_quantize];
"7 MobileNetV2/Sequential[features]/InvertedResidual[1]/Sequential[conv]/ConvBNReLU[0]/NNCFConv2d[0]/ModuleDict[pre_ops]/UpdateWeight[0]/SymmetricQuantizer[op]/symmetric_quantize" [color=orange, id=7, label="6_bit__WFQ_#UNDEFINED", scope="MobileNetV2/Sequential[features]/InvertedResidual[1]/Sequential[conv]/ConvBNReLU[0]/NNCFConv2d[0]/ModuleDict[pre_ops]/UpdateWeight[0]/SymmetricQuantizer[op]", style=filled, type=symmetric_quantize];
"8 MobileNetV2/Sequential[features]/InvertedResidual[1]/Sequential[conv]/ConvBNReLU[0]/NNCFConv2d[0]/conv2d" [color=purple, id=8, label=DW_Conv2d, scope="MobileNetV2/Sequential[features]/InvertedResidual[1]/Sequential[conv]/ConvBNReLU[0]/NNCFConv2d[0]", style=filled, type=conv2d];
"9 MobileNetV2/Sequential[features]/InvertedResidual[1]/Sequential[conv]/ConvBNReLU[0]/BatchNorm2d[1]/batch_norm" [id=9, label=batch_norm, scope="MobileNetV2/Sequential[features]/InvertedResidual[1]/Sequential[conv]/ConvBNReLU[0]/BatchNorm2d[1]", style=filled, type=batch_norm];
"10 MobileNetV2/Sequential[features]/InvertedResidual[1]/Sequential[conv]/ConvBNReLU[0]/ReLU6[2]/hardtanh" [id=10, label=hardtanh, scope="MobileNetV2/Sequential[features]/InvertedResidual[1]/Sequential[conv]/ConvBNReLU[0]/ReLU6[2]", style=filled, type=hardtanh];
"11 MobileNetV2/Sequential[features]/InvertedResidual[1]/Sequential[conv]/NNCFConv2d[1]/ModuleDict[pre_ops]/UpdateWeight[0]/SymmetricQuantizer[op]/symmetric_quantize" [color=orange, id=11, label="6_bit__WFQ_#1", scope="MobileNetV2/Sequential[features]/InvertedResidual[1]/Sequential[conv]/NNCFConv2d[1]/ModuleDict[pre_ops]/UpdateWeight[0]/SymmetricQuantizer[op]", style=filled, type=symmetric_quantize];
"12 MobileNetV2/Sequential[features]/InvertedResidual[1]/Sequential[conv]/NNCFConv2d[1]/conv2d" [color=lightblue, id=12, label=conv2d, scope="MobileNetV2/Sequential[features]/InvertedResidual[1]/Sequential[conv]/NNCFConv2d[1]", style=filled, type=conv2d];
"13 MobileNetV2/Sequential[features]/InvertedResidual[1]/Sequential[conv]/BatchNorm2d[2]/batch_norm" [id=13, label=batch_norm, scope="MobileNetV2/Sequential[features]/InvertedResidual[1]/Sequential[conv]/BatchNorm2d[2]", style=filled, type=batch_norm];
"14 MobileNetV2/Sequential[features]/InvertedResidual[1]/Sequential[conv]/BatchNorm2d[2]/SymmetricQuantizer/symmetric_quantize" [color=orange, id=14, label="6_bit__AFQ_#20", scope="MobileNetV2/Sequential[features]/InvertedResidual[1]/Sequential[conv]/BatchNorm2d[2]/SymmetricQuantizer", style=filled, type=symmetric_quantize];
"15 MobileNetV2/Sequential[features]/InvertedResidual[2]/Sequential[conv]/ConvBNReLU[0]/NNCFConv2d[0]/ModuleDict[pre_ops]/UpdateWeight[0]/SymmetricQuantizer[op]/symmetric_quantize" [color=orange, id=15, label="6_bit__WFQ_#20", scope="MobileNetV2/Sequential[features]/InvertedResidual[2]/Sequential[conv]/ConvBNReLU[0]/NNCFConv2d[0]/ModuleDict[pre_ops]/UpdateWeight[0]/SymmetricQuantizer[op]", style=filled, type=symmetric_quantize];
"16 MobileNetV2/Sequential[features]/InvertedResidual[2]/Sequential[conv]/ConvBNReLU[0]/NNCFConv2d[0]/conv2d" [color=lightblue, id=16, label=conv2d, scope="MobileNetV2/Sequential[features]/InvertedResidual[2]/Sequential[conv]/ConvBNReLU[0]/NNCFConv2d[0]", style=filled, type=conv2d];
"17 MobileNetV2/Sequential[features]/InvertedResidual[2]/Sequential[conv]/ConvBNReLU[0]/BatchNorm2d[1]/batch_norm" [id=17, label=batch_norm, scope="MobileNetV2/Sequential[features]/InvertedResidual[2]/Sequential[conv]/ConvBNReLU[0]/BatchNorm2d[1]", style=filled, type=batch_norm];
"18 MobileNetV2/Sequential[features]/InvertedResidual[2]/Sequential[conv]/ConvBNReLU[0]/ReLU6[2]/hardtanh" [id=18, label=hardtanh, scope="MobileNetV2/Sequential[features]/InvertedResidual[2]/Sequential[conv]/ConvBNReLU[0]/ReLU6[2]", style=filled, type=hardtanh];
"19 MobileNetV2/Sequential[features]/InvertedResidual[2]/Sequential[conv]/ConvBNReLU[0]/ReLU6[2]/SymmetricQuantizer/symmetric_quantize" [color=orange, id=19, label="6_bit__AFQ_#22", scope="MobileNetV2/Sequential[features]/InvertedResidual[2]/Sequential[conv]/ConvBNReLU[0]/ReLU6[2]/SymmetricQuantizer", style=filled, type=symmetric_quantize];
"20 MobileNetV2/Sequential[features]/InvertedResidual[2]/Sequential[conv]/ConvBNReLU[1]/NNCFConv2d[0]/ModuleDict[pre_ops]/UpdateWeight[0]/SymmetricQuantizer[op]/symmetric_quantize" [color=orange, id=20, label="6_bit__WFQ_#UNDEFINED", scope="MobileNetV2/Sequential[features]/InvertedResidual[2]/Sequential[conv]/ConvBNReLU[1]/NNCFConv2d[0]/ModuleDict[pre_ops]/UpdateWeight[0]/SymmetricQuantizer[op]", style=filled, type=symmetric_quantize];
"21 MobileNetV2/Sequential[features]/InvertedResidual[2]/Sequential[conv]/ConvBNReLU[1]/NNCFConv2d[0]/conv2d" [color=purple, id=21, label=DW_Conv2d, scope="MobileNetV2/Sequential[features]/InvertedResidual[2]/Sequential[conv]/ConvBNReLU[1]/NNCFConv2d[0]", style=filled, type=conv2d];
"22 MobileNetV2/Sequential[features]/InvertedResidual[2]/Sequential[conv]/ConvBNReLU[1]/BatchNorm2d[1]/batch_norm" [id=22, label=batch_norm, scope="MobileNetV2/Sequential[features]/InvertedResidual[2]/Sequential[conv]/ConvBNReLU[1]/BatchNorm2d[1]", style=filled, type=batch_norm];
"23 MobileNetV2/Sequential[features]/InvertedResidual[2]/Sequential[conv]/ConvBNReLU[1]/ReLU6[2]/hardtanh" [id=23, label=hardtanh, scope="MobileNetV2/Sequential[features]/InvertedResidual[2]/Sequential[conv]/ConvBNReLU[1]/ReLU6[2]", style=filled, type=hardtanh];
"24 MobileNetV2/Sequential[features]/InvertedResidual[2]/Sequential[conv]/NNCFConv2d[2]/ModuleDict[pre_ops]/UpdateWeight[0]/SymmetricQuantizer[op]/symmetric_quantize" [color=orange, id=24, label="6_bit__WFQ_#22", scope="MobileNetV2/Sequential[features]/InvertedResidual[2]/Sequential[conv]/NNCFConv2d[2]/ModuleDict[pre_ops]/UpdateWeight[0]/SymmetricQuantizer[op]", style=filled, type=symmetric_quantize];
"25 MobileNetV2/Sequential[features]/InvertedResidual[2]/Sequential[conv]/NNCFConv2d[2]/conv2d" [color=lightblue, id=25, label=conv2d, scope="MobileNetV2/Sequential[features]/InvertedResidual[2]/Sequential[conv]/NNCFConv2d[2]", style=filled, type=conv2d];
"26 MobileNetV2/Sequential[features]/InvertedResidual[2]/Sequential[conv]/BatchNorm2d[3]/batch_norm" [id=26, label=batch_norm, scope="MobileNetV2/Sequential[features]/InvertedResidual[2]/Sequential[conv]/BatchNorm2d[3]", style=filled, type=batch_norm];
"27 MobileNetV2/Sequential[features]/InvertedResidual[2]/Sequential[conv]/BatchNorm2d[3]/SymmetricQuantizer/symmetric_quantize" [color=orange, id=27, label="6_bit__AFQ_#21", scope="MobileNetV2/Sequential[features]/InvertedResidual[2]/Sequential[conv]/BatchNorm2d[3]/SymmetricQuantizer", style=filled, type=symmetric_quantize];
"28 MobileNetV2/Sequential[features]/InvertedResidual[3]/Sequential[conv]/ConvBNReLU[0]/NNCFConv2d[0]/ModuleDict[pre_ops]/UpdateWeight[0]/SymmetricQuantizer[op]/symmetric_quantize" [color=orange, id=28, label="6_bit__WFQ_#21", scope="MobileNetV2/Sequential[features]/InvertedResidual[3]/Sequential[conv]/ConvBNReLU[0]/NNCFConv2d[0]/ModuleDict[pre_ops]/UpdateWeight[0]/SymmetricQuantizer[op]", style=filled, type=symmetric_quantize];
"29 MobileNetV2/Sequential[features]/InvertedResidual[3]/Sequential[conv]/ConvBNReLU[0]/NNCFConv2d[0]/conv2d" [color=lightblue, id=29, label=conv2d, scope="MobileNetV2/Sequential[features]/InvertedResidual[3]/Sequential[conv]/ConvBNReLU[0]/NNCFConv2d[0]", style=filled, type=conv2d];
"30 MobileNetV2/Sequential[features]/InvertedResidual[3]/Sequential[conv]/ConvBNReLU[0]/BatchNorm2d[1]/batch_norm" [id=30, label=batch_norm, scope="MobileNetV2/Sequential[features]/InvertedResidual[3]/Sequential[conv]/ConvBNReLU[0]/BatchNorm2d[1]", style=filled, type=batch_norm];
"31 MobileNetV2/Sequential[features]/InvertedResidual[3]/Sequential[conv]/ConvBNReLU[0]/ReLU6[2]/hardtanh" [id=31, label=hardtanh, scope="MobileNetV2/Sequential[features]/InvertedResidual[3]/Sequential[conv]/ConvBNReLU[0]/ReLU6[2]", style=filled, type=hardtanh];
"32 MobileNetV2/Sequential[features]/InvertedResidual[3]/Sequential[conv]/ConvBNReLU[0]/ReLU6[2]/SymmetricQuantizer/symmetric_quantize" [color=orange, id=32, label="6_bit__AFQ_#23", scope="MobileNetV2/Sequential[features]/InvertedResidual[3]/Sequential[conv]/ConvBNReLU[0]/ReLU6[2]/SymmetricQuantizer", style=filled, type=symmetric_quantize];
"33 MobileNetV2/Sequential[features]/InvertedResidual[3]/Sequential[conv]/ConvBNReLU[1]/NNCFConv2d[0]/ModuleDict[pre_ops]/UpdateWeight[0]/SymmetricQuantizer[op]/symmetric_quantize" [color=orange, id=33, label="6_bit__WFQ_#UNDEFINED", scope="MobileNetV2/Sequential[features]/InvertedResidual[3]/Sequential[conv]/ConvBNReLU[1]/NNCFConv2d[0]/ModuleDict[pre_ops]/UpdateWeight[0]/SymmetricQuantizer[op]", style=filled, type=symmetric_quantize];
"34 MobileNetV2/Sequential[features]/InvertedResidual[3]/Sequential[conv]/ConvBNReLU[1]/NNCFConv2d[0]/conv2d" [color=purple, id=34, label=DW_Conv2d, scope="MobileNetV2/Sequential[features]/InvertedResidual[3]/Sequential[conv]/ConvBNReLU[1]/NNCFConv2d[0]", style=filled, type=conv2d];
"35 MobileNetV2/Sequential[features]/InvertedResidual[3]/Sequential[conv]/ConvBNReLU[1]/BatchNorm2d[1]/batch_norm" [id=35, label=batch_norm, scope="MobileNetV2/Sequential[features]/InvertedResidual[3]/Sequential[conv]/ConvBNReLU[1]/BatchNorm2d[1]", style=filled, type=batch_norm];
"36 MobileNetV2/Sequential[features]/InvertedResidual[3]/Sequential[conv]/ConvBNReLU[1]/ReLU6[2]/hardtanh" [id=36, label=hardtanh, scope="MobileNetV2/Sequential[features]/InvertedResidual[3]/Sequential[conv]/ConvBNReLU[1]/ReLU6[2]", style=filled, type=hardtanh];
"37 MobileNetV2/Sequential[features]/InvertedResidual[3]/Sequential[conv]/NNCFConv2d[2]/ModuleDict[pre_ops]/UpdateWeight[0]/SymmetricQuantizer[op]/symmetric_quantize" [color=orange, id=37, label="6_bit__WFQ_#23", scope="MobileNetV2/Sequential[features]/InvertedResidual[3]/Sequential[conv]/NNCFConv2d[2]/ModuleDict[pre_ops]/UpdateWeight[0]/SymmetricQuantizer[op]", style=filled, type=symmetric_quantize];
"38 MobileNetV2/Sequential[features]/InvertedResidual[3]/Sequential[conv]/NNCFConv2d[2]/conv2d" [color=lightblue, id=38, label=conv2d, scope="MobileNetV2/Sequential[features]/InvertedResidual[3]/Sequential[conv]/NNCFConv2d[2]", style=filled, type=conv2d];
"39 MobileNetV2/Sequential[features]/InvertedResidual[3]/Sequential[conv]/BatchNorm2d[3]/batch_norm" [id=39, label=batch_norm, scope="MobileNetV2/Sequential[features]/InvertedResidual[3]/Sequential[conv]/BatchNorm2d[3]", style=filled, type=batch_norm];
"40 MobileNetV2/Sequential[features]/InvertedResidual[3]/Sequential[conv]/BatchNorm2d[3]/SymmetricQuantizer/symmetric_quantize" [color=orange, id=40, label="6_bit__AFQ_#21", scope="MobileNetV2/Sequential[features]/InvertedResidual[3]/Sequential[conv]/BatchNorm2d[3]/SymmetricQuantizer", style=filled, type=symmetric_quantize];
"41 MobileNetV2/Sequential[features]/InvertedResidual[3]/__add__" [id=41, label=__add__, scope="MobileNetV2/Sequential[features]/InvertedResidual[3]", style=filled, type=__add__];
"42 MobileNetV2/Sequential[features]/InvertedResidual[3]/SymmetricQuantizer/symmetric_quantize" [color=orange, id=42, label="6_bit__AFQ_#24", scope="MobileNetV2/Sequential[features]/InvertedResidual[3]/SymmetricQuantizer", style=filled, type=symmetric_quantize];
"43 MobileNetV2/Sequential[features]/InvertedResidual[4]/Sequential[conv]/ConvBNReLU[0]/NNCFConv2d[0]/ModuleDict[pre_ops]/UpdateWeight[0]/SymmetricQuantizer[op]/symmetric_quantize" [color=orange, id=43, label="6_bit__WFQ_#24", scope="MobileNetV2/Sequential[features]/InvertedResidual[4]/Sequential[conv]/ConvBNReLU[0]/NNCFConv2d[0]/ModuleDict[pre_ops]/UpdateWeight[0]/SymmetricQuantizer[op]", style=filled, type=symmetric_quantize];
"44 MobileNetV2/Sequential[features]/InvertedResidual[4]/Sequential[conv]/ConvBNReLU[0]/NNCFConv2d[0]/conv2d" [color=lightblue, id=44, label=conv2d, scope="MobileNetV2/Sequential[features]/InvertedResidual[4]/Sequential[conv]/ConvBNReLU[0]/NNCFConv2d[0]", style=filled, type=conv2d];
"45 MobileNetV2/Sequential[features]/InvertedResidual[4]/Sequential[conv]/ConvBNReLU[0]/BatchNorm2d[1]/batch_norm" [id=45, label=batch_norm, scope="MobileNetV2/Sequential[features]/InvertedResidual[4]/Sequential[conv]/ConvBNReLU[0]/BatchNorm2d[1]", style=filled, type=batch_norm];
"46 MobileNetV2/Sequential[features]/InvertedResidual[4]/Sequential[conv]/ConvBNReLU[0]/ReLU6[2]/hardtanh" [id=46, label=hardtanh, scope="MobileNetV2/Sequential[features]/InvertedResidual[4]/Sequential[conv]/ConvBNReLU[0]/ReLU6[2]", style=filled, type=hardtanh];
"47 MobileNetV2/Sequential[features]/InvertedResidual[4]/Sequential[conv]/ConvBNReLU[0]/ReLU6[2]/SymmetricQuantizer/symmetric_quantize" [color=orange, id=47, label="6_bit__AFQ_#26", scope="MobileNetV2/Sequential[features]/InvertedResidual[4]/Sequential[conv]/ConvBNReLU[0]/ReLU6[2]/SymmetricQuantizer", style=filled, type=symmetric_quantize];
"48 MobileNetV2/Sequential[features]/InvertedResidual[4]/Sequential[conv]/ConvBNReLU[1]/NNCFConv2d[0]/ModuleDict[pre_ops]/UpdateWeight[0]/SymmetricQuantizer[op]/symmetric_quantize" [color=orange, id=48, label="6_bit__WFQ_#UNDEFINED", scope="MobileNetV2/Sequential[features]/InvertedResidual[4]/Sequential[conv]/ConvBNReLU[1]/NNCFConv2d[0]/ModuleDict[pre_ops]/UpdateWeight[0]/SymmetricQuantizer[op]", style=filled, type=symmetric_quantize];
"49 MobileNetV2/Sequential[features]/InvertedResidual[4]/Sequential[conv]/ConvBNReLU[1]/NNCFConv2d[0]/conv2d" [color=purple, id=49, label=DW_Conv2d, scope="MobileNetV2/Sequential[features]/InvertedResidual[4]/Sequential[conv]/ConvBNReLU[1]/NNCFConv2d[0]", style=filled, type=conv2d];
"50 MobileNetV2/Sequential[features]/InvertedResidual[4]/Sequential[conv]/ConvBNReLU[1]/BatchNorm2d[1]/batch_norm" [id=50, label=batch_norm, scope="MobileNetV2/Sequential[features]/InvertedResidual[4]/Sequential[conv]/ConvBNReLU[1]/BatchNorm2d[1]", style=filled, type=batch_norm];
"51 MobileNetV2/Sequential[features]/InvertedResidual[4]/Sequential[conv]/ConvBNReLU[1]/ReLU6[2]/hardtanh" [id=51, label=hardtanh, scope="MobileNetV2/Sequential[features]/InvertedResidual[4]/Sequential[conv]/ConvBNReLU[1]/ReLU6[2]", style=filled, type=hardtanh];
"52 MobileNetV2/Sequential[features]/InvertedResidual[4]/Sequential[conv]/NNCFConv2d[2]/ModuleDict[pre_ops]/UpdateWeight[0]/SymmetricQuantizer[op]/symmetric_quantize" [color=orange, id=52, label="6_bit__WFQ_#26", scope="MobileNetV2/Sequential[features]/InvertedResidual[4]/Sequential[conv]/NNCFConv2d[2]/ModuleDict[pre_ops]/UpdateWeight[0]/SymmetricQuantizer[op]", style=filled, type=symmetric_quantize];
"53 MobileNetV2/Sequential[features]/InvertedResidual[4]/Sequential[conv]/NNCFConv2d[2]/conv2d" [color=lightblue, id=53, label=conv2d, scope="MobileNetV2/Sequential[features]/InvertedResidual[4]/Sequential[conv]/NNCFConv2d[2]", style=filled, type=conv2d];
"54 MobileNetV2/Sequential[features]/InvertedResidual[4]/Sequential[conv]/BatchNorm2d[3]/batch_norm" [id=54, label=batch_norm, scope="MobileNetV2/Sequential[features]/InvertedResidual[4]/Sequential[conv]/BatchNorm2d[3]", style=filled, type=batch_norm];
"55 MobileNetV2/Sequential[features]/InvertedResidual[4]/Sequential[conv]/BatchNorm2d[3]/SymmetricQuantizer/symmetric_quantize" [color=orange, id=55, label="6_bit__AFQ_#25", scope="MobileNetV2/Sequential[features]/InvertedResidual[4]/Sequential[conv]/BatchNorm2d[3]/SymmetricQuantizer", style=filled, type=symmetric_quantize];
"56 MobileNetV2/Sequential[features]/InvertedResidual[5]/Sequential[conv]/ConvBNReLU[0]/NNCFConv2d[0]/ModuleDict[pre_ops]/UpdateWeight[0]/SymmetricQuantizer[op]/symmetric_quantize" [color=orange, id=56, label="6_bit__WFQ_#25", scope="MobileNetV2/Sequential[features]/InvertedResidual[5]/Sequential[conv]/ConvBNReLU[0]/NNCFConv2d[0]/ModuleDict[pre_ops]/UpdateWeight[0]/SymmetricQuantizer[op]", style=filled, type=symmetric_quantize];
"57 MobileNetV2/Sequential[features]/InvertedResidual[5]/Sequential[conv]/ConvBNReLU[0]/NNCFConv2d[0]/conv2d" [color=lightblue, id=57, label=conv2d, scope="MobileNetV2/Sequential[features]/InvertedResidual[5]/Sequential[conv]/ConvBNReLU[0]/NNCFConv2d[0]", style=filled, type=conv2d];
"58 MobileNetV2/Sequential[features]/InvertedResidual[5]/Sequential[conv]/ConvBNReLU[0]/BatchNorm2d[1]/batch_norm" [id=58, label=batch_norm, scope="MobileNetV2/Sequential[features]/InvertedResidual[5]/Sequential[conv]/ConvBNReLU[0]/BatchNorm2d[1]", style=filled, type=batch_norm];
"59 MobileNetV2/Sequential[features]/InvertedResidual[5]/Sequential[conv]/ConvBNReLU[0]/ReLU6[2]/hardtanh" [id=59, label=hardtanh, scope="MobileNetV2/Sequential[features]/InvertedResidual[5]/Sequential[conv]/ConvBNReLU[0]/ReLU6[2]", style=filled, type=hardtanh];
"60 MobileNetV2/Sequential[features]/InvertedResidual[5]/Sequential[conv]/ConvBNReLU[0]/ReLU6[2]/SymmetricQuantizer/symmetric_quantize" [color=orange, id=60, label="6_bit__AFQ_#27", scope="MobileNetV2/Sequential[features]/InvertedResidual[5]/Sequential[conv]/ConvBNReLU[0]/ReLU6[2]/SymmetricQuantizer", style=filled, type=symmetric_quantize];
"61 MobileNetV2/Sequential[features]/InvertedResidual[5]/Sequential[conv]/ConvBNReLU[1]/NNCFConv2d[0]/ModuleDict[pre_ops]/UpdateWeight[0]/SymmetricQuantizer[op]/symmetric_quantize" [color=orange, id=61, label="6_bit__WFQ_#UNDEFINED", scope="MobileNetV2/Sequential[features]/InvertedResidual[5]/Sequential[conv]/ConvBNReLU[1]/NNCFConv2d[0]/ModuleDict[pre_ops]/UpdateWeight[0]/SymmetricQuantizer[op]", style=filled, type=symmetric_quantize];
"62 MobileNetV2/Sequential[features]/InvertedResidual[5]/Sequential[conv]/ConvBNReLU[1]/NNCFConv2d[0]/conv2d" [color=purple, id=62, label=DW_Conv2d, scope="MobileNetV2/Sequential[features]/InvertedResidual[5]/Sequential[conv]/ConvBNReLU[1]/NNCFConv2d[0]", style=filled, type=conv2d];
"63 MobileNetV2/Sequential[features]/InvertedResidual[5]/Sequential[conv]/ConvBNReLU[1]/BatchNorm2d[1]/batch_norm" [id=63, label=batch_norm, scope="MobileNetV2/Sequential[features]/InvertedResidual[5]/Sequential[conv]/ConvBNReLU[1]/BatchNorm2d[1]", style=filled, type=batch_norm];
"64 MobileNetV2/Sequential[features]/InvertedResidual[5]/Sequential[conv]/ConvBNReLU[1]/ReLU6[2]/hardtanh" [id=64, label=hardtanh, scope="MobileNetV2/Sequential[features]/InvertedResidual[5]/Sequential[conv]/ConvBNReLU[1]/ReLU6[2]", style=filled, type=hardtanh];
"65 MobileNetV2/Sequential[features]/InvertedResidual[5]/Sequential[conv]/NNCFConv2d[2]/ModuleDict[pre_ops]/UpdateWeight[0]/SymmetricQuantizer[op]/symmetric_quantize" [color=orange, id=65, label="6_bit__WFQ_#27", scope="MobileNetV2/Sequential[features]/InvertedResidual[5]/Sequential[conv]/NNCFConv2d[2]/ModuleDict[pre_ops]/UpdateWeight[0]/SymmetricQuantizer[op]", style=filled, type=symmetric_quantize];
"66 MobileNetV2/Sequential[features]/InvertedResidual[5]/Sequential[conv]/NNCFConv2d[2]/conv2d" [color=lightblue, id=66, label=conv2d, scope="MobileNetV2/Sequential[features]/InvertedResidual[5]/Sequential[conv]/NNCFConv2d[2]", style=filled, type=conv2d];
"67 MobileNetV2/Sequential[features]/InvertedResidual[5]/Sequential[conv]/BatchNorm2d[3]/batch_norm" [id=67, label=batch_norm, scope="MobileNetV2/Sequential[features]/InvertedResidual[5]/Sequential[conv]/BatchNorm2d[3]", style=filled, type=batch_norm];
"68 MobileNetV2/Sequential[features]/InvertedResidual[5]/Sequential[conv]/BatchNorm2d[3]/SymmetricQuantizer/symmetric_quantize" [color=orange, id=68, label="6_bit__AFQ_#25", scope="MobileNetV2/Sequential[features]/InvertedResidual[5]/Sequential[conv]/BatchNorm2d[3]/SymmetricQuantizer", style=filled, type=symmetric_quantize];
"69 MobileNetV2/Sequential[features]/InvertedResidual[5]/__add__" [id=69, label=__add__, scope="MobileNetV2/Sequential[features]/InvertedResidual[5]", style=filled, type=__add__];
"70 MobileNetV2/Sequential[features]/InvertedResidual[5]/SymmetricQuantizer/symmetric_quantize" [color=orange, id=70, label="6_bit__AFQ_#28", scope="MobileNetV2/Sequential[features]/InvertedResidual[5]/SymmetricQuantizer", style=filled, type=symmetric_quantize];
"71 MobileNetV2/Sequential[features]/InvertedResidual[6]/Sequential[conv]/ConvBNReLU[0]/NNCFConv2d[0]/ModuleDict[pre_ops]/UpdateWeight[0]/SymmetricQuantizer[op]/symmetric_quantize" [color=orange, id=71, label="6_bit__WFQ_#28", scope="MobileNetV2/Sequential[features]/InvertedResidual[6]/Sequential[conv]/ConvBNReLU[0]/NNCFConv2d[0]/ModuleDict[pre_ops]/UpdateWeight[0]/SymmetricQuantizer[op]", style=filled, type=symmetric_quantize];
"72 MobileNetV2/Sequential[features]/InvertedResidual[6]/Sequential[conv]/ConvBNReLU[0]/NNCFConv2d[0]/conv2d" [color=lightblue, id=72, label=conv2d, scope="MobileNetV2/Sequential[features]/InvertedResidual[6]/Sequential[conv]/ConvBNReLU[0]/NNCFConv2d[0]", style=filled, type=conv2d];
"73 MobileNetV2/Sequential[features]/InvertedResidual[6]/Sequential[conv]/ConvBNReLU[0]/BatchNorm2d[1]/batch_norm" [id=73, label=batch_norm, scope="MobileNetV2/Sequential[features]/InvertedResidual[6]/Sequential[conv]/ConvBNReLU[0]/BatchNorm2d[1]", style=filled, type=batch_norm];
"74 MobileNetV2/Sequential[features]/InvertedResidual[6]/Sequential[conv]/ConvBNReLU[0]/ReLU6[2]/hardtanh" [id=74, label=hardtanh, scope="MobileNetV2/Sequential[features]/InvertedResidual[6]/Sequential[conv]/ConvBNReLU[0]/ReLU6[2]", style=filled, type=hardtanh];
"75 MobileNetV2/Sequential[features]/InvertedResidual[6]/Sequential[conv]/ConvBNReLU[0]/ReLU6[2]/SymmetricQuantizer/symmetric_quantize" [color=orange, id=75, label="6_bit__AFQ_#29", scope="MobileNetV2/Sequential[features]/InvertedResidual[6]/Sequential[conv]/ConvBNReLU[0]/ReLU6[2]/SymmetricQuantizer", style=filled, type=symmetric_quantize];
"76 MobileNetV2/Sequential[features]/InvertedResidual[6]/Sequential[conv]/ConvBNReLU[1]/NNCFConv2d[0]/ModuleDict[pre_ops]/UpdateWeight[0]/SymmetricQuantizer[op]/symmetric_quantize" [color=orange, id=76, label="6_bit__WFQ_#UNDEFINED", scope="MobileNetV2/Sequential[features]/InvertedResidual[6]/Sequential[conv]/ConvBNReLU[1]/NNCFConv2d[0]/ModuleDict[pre_ops]/UpdateWeight[0]/SymmetricQuantizer[op]", style=filled, type=symmetric_quantize];
"77 MobileNetV2/Sequential[features]/InvertedResidual[6]/Sequential[conv]/ConvBNReLU[1]/NNCFConv2d[0]/conv2d" [color=purple, id=77, label=DW_Conv2d, scope="MobileNetV2/Sequential[features]/InvertedResidual[6]/Sequential[conv]/ConvBNReLU[1]/NNCFConv2d[0]", style=filled, type=conv2d];
"78 MobileNetV2/Sequential[features]/InvertedResidual[6]/Sequential[conv]/ConvBNReLU[1]/BatchNorm2d[1]/batch_norm" [id=78, label=batch_norm, scope="MobileNetV2/Sequential[features]/InvertedResidual[6]/Sequential[conv]/ConvBNReLU[1]/BatchNorm2d[1]", style=filled, type=batch_norm];
"79 MobileNetV2/Sequential[features]/InvertedResidual[6]/Sequential[conv]/ConvBNReLU[1]/ReLU6[2]/hardtanh" [id=79, label=hardtanh, scope="MobileNetV2/Sequential[features]/InvertedResidual[6]/Sequential[conv]/ConvBNReLU[1]/ReLU6[2]", style=filled, type=hardtanh];
"80 MobileNetV2/Sequential[features]/InvertedResidual[6]/Sequential[conv]/NNCFConv2d[2]/ModuleDict[pre_ops]/UpdateWeight[0]/SymmetricQuantizer[op]/symmetric_quantize" [color=orange, id=80, label="6_bit__WFQ_#29", scope="MobileNetV2/Sequential[features]/InvertedResidual[6]/Sequential[conv]/NNCFConv2d[2]/ModuleDict[pre_ops]/UpdateWeight[0]/SymmetricQuantizer[op]", style=filled, type=symmetric_quantize];
"81 MobileNetV2/Sequential[features]/InvertedResidual[6]/Sequential[conv]/NNCFConv2d[2]/conv2d" [color=lightblue, id=81, label=conv2d, scope="MobileNetV2/Sequential[features]/InvertedResidual[6]/Sequential[conv]/NNCFConv2d[2]", style=filled, type=conv2d];
"82 MobileNetV2/Sequential[features]/InvertedResidual[6]/Sequential[conv]/BatchNorm2d[3]/batch_norm" [id=82, label=batch_norm, scope="MobileNetV2/Sequential[features]/InvertedResidual[6]/Sequential[conv]/BatchNorm2d[3]", style=filled, type=batch_norm];
"83 MobileNetV2/Sequential[features]/InvertedResidual[6]/Sequential[conv]/BatchNorm2d[3]/SymmetricQuantizer/symmetric_quantize" [color=orange, id=83, label="6_bit__AFQ_#28", scope="MobileNetV2/Sequential[features]/InvertedResidual[6]/Sequential[conv]/BatchNorm2d[3]/SymmetricQuantizer", style=filled, type=symmetric_quantize];
"84 MobileNetV2/Sequential[features]/InvertedResidual[6]/__add__" [id=84, label=__add__, scope="MobileNetV2/Sequential[features]/InvertedResidual[6]", style=filled, type=__add__];
"85 MobileNetV2/Sequential[features]/InvertedResidual[6]/SymmetricQuantizer/symmetric_quantize" [color=orange, id=85, label="6_bit__AFQ_#30", scope="MobileNetV2/Sequential[features]/InvertedResidual[6]/SymmetricQuantizer", style=filled, type=symmetric_quantize];
"86 MobileNetV2/Sequential[features]/InvertedResidual[7]/Sequential[conv]/ConvBNReLU[0]/NNCFConv2d[0]/ModuleDict[pre_ops]/UpdateWeight[0]/SymmetricQuantizer[op]/symmetric_quantize" [color=orange, id=86, label="6_bit__WFQ_#30", scope="MobileNetV2/Sequential[features]/InvertedResidual[7]/Sequential[conv]/ConvBNReLU[0]/NNCFConv2d[0]/ModuleDict[pre_ops]/UpdateWeight[0]/SymmetricQuantizer[op]", style=filled, type=symmetric_quantize];
"87 MobileNetV2/Sequential[features]/InvertedResidual[7]/Sequential[conv]/ConvBNReLU[0]/NNCFConv2d[0]/conv2d" [color=lightblue, id=87, label=conv2d, scope="MobileNetV2/Sequential[features]/InvertedResidual[7]/Sequential[conv]/ConvBNReLU[0]/NNCFConv2d[0]", style=filled, type=conv2d];
"88 MobileNetV2/Sequential[features]/InvertedResidual[7]/Sequential[conv]/ConvBNReLU[0]/BatchNorm2d[1]/batch_norm" [id=88, label=batch_norm, scope="MobileNetV2/Sequential[features]/InvertedResidual[7]/Sequential[conv]/ConvBNReLU[0]/BatchNorm2d[1]", style=filled, type=batch_norm];
"89 MobileNetV2/Sequential[features]/InvertedResidual[7]/Sequential[conv]/ConvBNReLU[0]/ReLU6[2]/hardtanh" [id=89, label=hardtanh, scope="MobileNetV2/Sequential[features]/InvertedResidual[7]/Sequential[conv]/ConvBNReLU[0]/ReLU6[2]", style=filled, type=hardtanh];
"90 MobileNetV2/Sequential[features]/InvertedResidual[7]/Sequential[conv]/ConvBNReLU[0]/ReLU6[2]/SymmetricQuantizer/symmetric_quantize" [color=orange, id=90, label="6_bit__AFQ_#32", scope="MobileNetV2/Sequential[features]/InvertedResidual[7]/Sequential[conv]/ConvBNReLU[0]/ReLU6[2]/SymmetricQuantizer", style=filled, type=symmetric_quantize];
"91 MobileNetV2/Sequential[features]/InvertedResidual[7]/Sequential[conv]/ConvBNReLU[1]/NNCFConv2d[0]/ModuleDict[pre_ops]/UpdateWeight[0]/SymmetricQuantizer[op]/symmetric_quantize" [color=orange, id=91, label="6_bit__WFQ_#UNDEFINED", scope="MobileNetV2/Sequential[features]/InvertedResidual[7]/Sequential[conv]/ConvBNReLU[1]/NNCFConv2d[0]/ModuleDict[pre_ops]/UpdateWeight[0]/SymmetricQuantizer[op]", style=filled, type=symmetric_quantize];
"92 MobileNetV2/Sequential[features]/InvertedResidual[7]/Sequential[conv]/ConvBNReLU[1]/NNCFConv2d[0]/conv2d" [color=purple, id=92, label=DW_Conv2d, scope="MobileNetV2/Sequential[features]/InvertedResidual[7]/Sequential[conv]/ConvBNReLU[1]/NNCFConv2d[0]", style=filled, type=conv2d];
"93 MobileNetV2/Sequential[features]/InvertedResidual[7]/Sequential[conv]/ConvBNReLU[1]/BatchNorm2d[1]/batch_norm" [id=93, label=batch_norm, scope="MobileNetV2/Sequential[features]/InvertedResidual[7]/Sequential[conv]/ConvBNReLU[1]/BatchNorm2d[1]", style=filled, type=batch_norm];
"94 MobileNetV2/Sequential[features]/InvertedResidual[7]/Sequential[conv]/ConvBNReLU[1]/ReLU6[2]/hardtanh" [id=94, label=hardtanh, scope="MobileNetV2/Sequential[features]/InvertedResidual[7]/Sequential[conv]/ConvBNReLU[1]/ReLU6[2]", style=filled, type=hardtanh];
"95 MobileNetV2/Sequential[features]/InvertedResidual[7]/Sequential[conv]/NNCFConv2d[2]/ModuleDict[pre_ops]/UpdateWeight[0]/SymmetricQuantizer[op]/symmetric_quantize" [color=orange, id=95, label="6_bit__WFQ_#32", scope="MobileNetV2/Sequential[features]/InvertedResidual[7]/Sequential[conv]/NNCFConv2d[2]/ModuleDict[pre_ops]/UpdateWeight[0]/SymmetricQuantizer[op]", style=filled, type=symmetric_quantize];
"96 MobileNetV2/Sequential[features]/InvertedResidual[7]/Sequential[conv]/NNCFConv2d[2]/conv2d" [color=lightblue, id=96, label=conv2d, scope="MobileNetV2/Sequential[features]/InvertedResidual[7]/Sequential[conv]/NNCFConv2d[2]", style=filled, type=conv2d];
"97 MobileNetV2/Sequential[features]/InvertedResidual[7]/Sequential[conv]/BatchNorm2d[3]/batch_norm" [id=97, label=batch_norm, scope="MobileNetV2/Sequential[features]/InvertedResidual[7]/Sequential[conv]/BatchNorm2d[3]", style=filled, type=batch_norm];
"98 MobileNetV2/Sequential[features]/InvertedResidual[7]/Sequential[conv]/BatchNorm2d[3]/SymmetricQuantizer/symmetric_quantize" [color=orange, id=98, label="6_bit__AFQ_#31", scope="MobileNetV2/Sequential[features]/InvertedResidual[7]/Sequential[conv]/BatchNorm2d[3]/SymmetricQuantizer", style=filled, type=symmetric_quantize];
"99 MobileNetV2/Sequential[features]/InvertedResidual[8]/Sequential[conv]/ConvBNReLU[0]/NNCFConv2d[0]/ModuleDict[pre_ops]/UpdateWeight[0]/SymmetricQuantizer[op]/symmetric_quantize" [color=orange, id=99, label="6_bit__WFQ_#31", scope="MobileNetV2/Sequential[features]/InvertedResidual[8]/Sequential[conv]/ConvBNReLU[0]/NNCFConv2d[0]/ModuleDict[pre_ops]/UpdateWeight[0]/SymmetricQuantizer[op]", style=filled, type=symmetric_quantize];
"100 MobileNetV2/Sequential[features]/InvertedResidual[8]/Sequential[conv]/ConvBNReLU[0]/NNCFConv2d[0]/conv2d" [color=lightblue, id=100, label=conv2d, scope="MobileNetV2/Sequential[features]/InvertedResidual[8]/Sequential[conv]/ConvBNReLU[0]/NNCFConv2d[0]", style=filled, type=conv2d];
"101 MobileNetV2/Sequential[features]/InvertedResidual[8]/Sequential[conv]/ConvBNReLU[0]/BatchNorm2d[1]/batch_norm" [id=101, label=batch_norm, scope="MobileNetV2/Sequential[features]/InvertedResidual[8]/Sequential[conv]/ConvBNReLU[0]/BatchNorm2d[1]", style=filled, type=batch_norm];
"102 MobileNetV2/Sequential[features]/InvertedResidual[8]/Sequential[conv]/ConvBNReLU[0]/ReLU6[2]/hardtanh" [id=102, label=hardtanh, scope="MobileNetV2/Sequential[features]/InvertedResidual[8]/Sequential[conv]/ConvBNReLU[0]/ReLU6[2]", style=filled, type=hardtanh];
"103 MobileNetV2/Sequential[features]/InvertedResidual[8]/Sequential[conv]/ConvBNReLU[0]/ReLU6[2]/SymmetricQuantizer/symmetric_quantize" [color=orange, id=103, label="6_bit__AFQ_#33", scope="MobileNetV2/Sequential[features]/InvertedResidual[8]/Sequential[conv]/ConvBNReLU[0]/ReLU6[2]/SymmetricQuantizer", style=filled, type=symmetric_quantize];
"104 MobileNetV2/Sequential[features]/InvertedResidual[8]/Sequential[conv]/ConvBNReLU[1]/NNCFConv2d[0]/ModuleDict[pre_ops]/UpdateWeight[0]/SymmetricQuantizer[op]/symmetric_quantize" [color=orange, id=104, label="6_bit__WFQ_#UNDEFINED", scope="MobileNetV2/Sequential[features]/InvertedResidual[8]/Sequential[conv]/ConvBNReLU[1]/NNCFConv2d[0]/ModuleDict[pre_ops]/UpdateWeight[0]/SymmetricQuantizer[op]", style=filled, type=symmetric_quantize];
"105 MobileNetV2/Sequential[features]/InvertedResidual[8]/Sequential[conv]/ConvBNReLU[1]/NNCFConv2d[0]/conv2d" [color=purple, id=105, label=DW_Conv2d, scope="MobileNetV2/Sequential[features]/InvertedResidual[8]/Sequential[conv]/ConvBNReLU[1]/NNCFConv2d[0]", style=filled, type=conv2d];
"106 MobileNetV2/Sequential[features]/InvertedResidual[8]/Sequential[conv]/ConvBNReLU[1]/BatchNorm2d[1]/batch_norm" [id=106, label=batch_norm, scope="MobileNetV2/Sequential[features]/InvertedResidual[8]/Sequential[conv]/ConvBNReLU[1]/BatchNorm2d[1]", style=filled, type=batch_norm];
"107 MobileNetV2/Sequential[features]/InvertedResidual[8]/Sequential[conv]/ConvBNReLU[1]/ReLU6[2]/hardtanh" [id=107, label=hardtanh, scope="MobileNetV2/Sequential[features]/InvertedResidual[8]/Sequential[conv]/ConvBNReLU[1]/ReLU6[2]", style=filled, type=hardtanh];
"108 MobileNetV2/Sequential[features]/InvertedResidual[8]/Sequential[conv]/NNCFConv2d[2]/ModuleDict[pre_ops]/UpdateWeight[0]/SymmetricQuantizer[op]/symmetric_quantize" [color=orange, id=108, label="6_bit__WFQ_#33", scope="MobileNetV2/Sequential[features]/InvertedResidual[8]/Sequential[conv]/NNCFConv2d[2]/ModuleDict[pre_ops]/UpdateWeight[0]/SymmetricQuantizer[op]", style=filled, type=symmetric_quantize];
"109 MobileNetV2/Sequential[features]/InvertedResidual[8]/Sequential[conv]/NNCFConv2d[2]/conv2d" [color=lightblue, id=109, label=conv2d, scope="MobileNetV2/Sequential[features]/InvertedResidual[8]/Sequential[conv]/NNCFConv2d[2]", style=filled, type=conv2d];
"110 MobileNetV2/Sequential[features]/InvertedResidual[8]/Sequential[conv]/BatchNorm2d[3]/batch_norm" [id=110, label=batch_norm, scope="MobileNetV2/Sequential[features]/InvertedResidual[8]/Sequential[conv]/BatchNorm2d[3]", style=filled, type=batch_norm];
"111 MobileNetV2/Sequential[features]/InvertedResidual[8]/Sequential[conv]/BatchNorm2d[3]/SymmetricQuantizer/symmetric_quantize" [color=orange, id=111, label="6_bit__AFQ_#31", scope="MobileNetV2/Sequential[features]/InvertedResidual[8]/Sequential[conv]/BatchNorm2d[3]/SymmetricQuantizer", style=filled, type=symmetric_quantize];
"112 MobileNetV2/Sequential[features]/InvertedResidual[8]/__add__" [id=112, label=__add__, scope="MobileNetV2/Sequential[features]/InvertedResidual[8]", style=filled, type=__add__];
"113 MobileNetV2/Sequential[features]/InvertedResidual[8]/SymmetricQuantizer/symmetric_quantize" [color=orange, id=113, label="6_bit__AFQ_#34", scope="MobileNetV2/Sequential[features]/InvertedResidual[8]/SymmetricQuantizer", style=filled, type=symmetric_quantize];
"114 MobileNetV2/Sequential[features]/InvertedResidual[9]/Sequential[conv]/ConvBNReLU[0]/NNCFConv2d[0]/ModuleDict[pre_ops]/UpdateWeight[0]/SymmetricQuantizer[op]/symmetric_quantize" [color=orange, id=114, label="6_bit__WFQ_#34", scope="MobileNetV2/Sequential[features]/InvertedResidual[9]/Sequential[conv]/ConvBNReLU[0]/NNCFConv2d[0]/ModuleDict[pre_ops]/UpdateWeight[0]/SymmetricQuantizer[op]", style=filled, type=symmetric_quantize];
"115 MobileNetV2/Sequential[features]/InvertedResidual[9]/Sequential[conv]/ConvBNReLU[0]/NNCFConv2d[0]/conv2d" [color=lightblue, id=115, label=conv2d, scope="MobileNetV2/Sequential[features]/InvertedResidual[9]/Sequential[conv]/ConvBNReLU[0]/NNCFConv2d[0]", style=filled, type=conv2d];
"116 MobileNetV2/Sequential[features]/InvertedResidual[9]/Sequential[conv]/ConvBNReLU[0]/BatchNorm2d[1]/batch_norm" [id=116, label=batch_norm, scope="MobileNetV2/Sequential[features]/InvertedResidual[9]/Sequential[conv]/ConvBNReLU[0]/BatchNorm2d[1]", style=filled, type=batch_norm];
"117 MobileNetV2/Sequential[features]/InvertedResidual[9]/Sequential[conv]/ConvBNReLU[0]/ReLU6[2]/hardtanh" [id=117, label=hardtanh, scope="MobileNetV2/Sequential[features]/InvertedResidual[9]/Sequential[conv]/ConvBNReLU[0]/ReLU6[2]", style=filled, type=hardtanh];
"118 MobileNetV2/Sequential[features]/InvertedResidual[9]/Sequential[conv]/ConvBNReLU[0]/ReLU6[2]/SymmetricQuantizer/symmetric_quantize" [color=orange, id=118, label="6_bit__AFQ_#35", scope="MobileNetV2/Sequential[features]/InvertedResidual[9]/Sequential[conv]/ConvBNReLU[0]/ReLU6[2]/SymmetricQuantizer", style=filled, type=symmetric_quantize];
"119 MobileNetV2/Sequential[features]/InvertedResidual[9]/Sequential[conv]/ConvBNReLU[1]/NNCFConv2d[0]/ModuleDict[pre_ops]/UpdateWeight[0]/SymmetricQuantizer[op]/symmetric_quantize" [color=orange, id=119, label="6_bit__WFQ_#UNDEFINED", scope="MobileNetV2/Sequential[features]/InvertedResidual[9]/Sequential[conv]/ConvBNReLU[1]/NNCFConv2d[0]/ModuleDict[pre_ops]/UpdateWeight[0]/SymmetricQuantizer[op]", style=filled, type=symmetric_quantize];
"120 MobileNetV2/Sequential[features]/InvertedResidual[9]/Sequential[conv]/ConvBNReLU[1]/NNCFConv2d[0]/conv2d" [color=purple, id=120, label=DW_Conv2d, scope="MobileNetV2/Sequential[features]/InvertedResidual[9]/Sequential[conv]/ConvBNReLU[1]/NNCFConv2d[0]", style=filled, type=conv2d];
"121 MobileNetV2/Sequential[features]/InvertedResidual[9]/Sequential[conv]/ConvBNReLU[1]/BatchNorm2d[1]/batch_norm" [id=121, label=batch_norm, scope="MobileNetV2/Sequential[features]/InvertedResidual[9]/Sequential[conv]/ConvBNReLU[1]/BatchNorm2d[1]", style=filled, type=batch_norm];
"122 MobileNetV2/Sequential[features]/InvertedResidual[9]/Sequential[conv]/ConvBNReLU[1]/ReLU6[2]/hardtanh" [id=122, label=hardtanh, scope="MobileNetV2/Sequential[features]/InvertedResidual[9]/Sequential[conv]/ConvBNReLU[1]/ReLU6[2]", style=filled, type=hardtanh];
"123 MobileNetV2/Sequential[features]/InvertedResidual[9]/Sequential[conv]/NNCFConv2d[2]/ModuleDict[pre_ops]/UpdateWeight[0]/SymmetricQuantizer[op]/symmetric_quantize" [color=orange, id=123, label="6_bit__WFQ_#35", scope="MobileNetV2/Sequential[features]/InvertedResidual[9]/Sequential[conv]/NNCFConv2d[2]/ModuleDict[pre_ops]/UpdateWeight[0]/SymmetricQuantizer[op]", style=filled, type=symmetric_quantize];
"124 MobileNetV2/Sequential[features]/InvertedResidual[9]/Sequential[conv]/NNCFConv2d[2]/conv2d" [color=lightblue, id=124, label=conv2d, scope="MobileNetV2/Sequential[features]/InvertedResidual[9]/Sequential[conv]/NNCFConv2d[2]", style=filled, type=conv2d];
"125 MobileNetV2/Sequential[features]/InvertedResidual[9]/Sequential[conv]/BatchNorm2d[3]/batch_norm" [id=125, label=batch_norm, scope="MobileNetV2/Sequential[features]/InvertedResidual[9]/Sequential[conv]/BatchNorm2d[3]", style=filled, type=batch_norm];
"126 MobileNetV2/Sequential[features]/InvertedResidual[9]/Sequential[conv]/BatchNorm2d[3]/SymmetricQuantizer/symmetric_quantize" [color=orange, id=126, label="6_bit__AFQ_#34", scope="MobileNetV2/Sequential[features]/InvertedResidual[9]/Sequential[conv]/BatchNorm2d[3]/SymmetricQuantizer", style=filled, type=symmetric_quantize];
"127 MobileNetV2/Sequential[features]/InvertedResidual[9]/__add__" [id=127, label=__add__, scope="MobileNetV2/Sequential[features]/InvertedResidual[9]", style=filled, type=__add__];
"128 MobileNetV2/Sequential[features]/InvertedResidual[9]/SymmetricQuantizer/symmetric_quantize" [color=orange, id=128, label="6_bit__AFQ_#3", scope="MobileNetV2/Sequential[features]/InvertedResidual[9]/SymmetricQuantizer", style=filled, type=symmetric_quantize];
"129 MobileNetV2/Sequential[features]/InvertedResidual[10]/Sequential[conv]/ConvBNReLU[0]/NNCFConv2d[0]/ModuleDict[pre_ops]/UpdateWeight[0]/SymmetricQuantizer[op]/symmetric_quantize" [color=orange, id=129, label="6_bit__WFQ_#3", scope="MobileNetV2/Sequential[features]/InvertedResidual[10]/Sequential[conv]/ConvBNReLU[0]/NNCFConv2d[0]/ModuleDict[pre_ops]/UpdateWeight[0]/SymmetricQuantizer[op]", style=filled, type=symmetric_quantize];
"130 MobileNetV2/Sequential[features]/InvertedResidual[10]/Sequential[conv]/ConvBNReLU[0]/NNCFConv2d[0]/conv2d" [color=lightblue, id=130, label=conv2d, scope="MobileNetV2/Sequential[features]/InvertedResidual[10]/Sequential[conv]/ConvBNReLU[0]/NNCFConv2d[0]", style=filled, type=conv2d];
"131 MobileNetV2/Sequential[features]/InvertedResidual[10]/Sequential[conv]/ConvBNReLU[0]/BatchNorm2d[1]/batch_norm" [id=131, label=batch_norm, scope="MobileNetV2/Sequential[features]/InvertedResidual[10]/Sequential[conv]/ConvBNReLU[0]/BatchNorm2d[1]", style=filled, type=batch_norm];
"132 MobileNetV2/Sequential[features]/InvertedResidual[10]/Sequential[conv]/ConvBNReLU[0]/ReLU6[2]/hardtanh" [id=132, label=hardtanh, scope="MobileNetV2/Sequential[features]/InvertedResidual[10]/Sequential[conv]/ConvBNReLU[0]/ReLU6[2]", style=filled, type=hardtanh];
"133 MobileNetV2/Sequential[features]/InvertedResidual[10]/Sequential[conv]/ConvBNReLU[0]/ReLU6[2]/SymmetricQuantizer/symmetric_quantize" [color=orange, id=133, label="6_bit__AFQ_#4", scope="MobileNetV2/Sequential[features]/InvertedResidual[10]/Sequential[conv]/ConvBNReLU[0]/ReLU6[2]/SymmetricQuantizer", style=filled, type=symmetric_quantize];
"134 MobileNetV2/Sequential[features]/InvertedResidual[10]/Sequential[conv]/ConvBNReLU[1]/NNCFConv2d[0]/ModuleDict[pre_ops]/UpdateWeight[0]/SymmetricQuantizer[op]/symmetric_quantize" [color=orange, id=134, label="6_bit__WFQ_#UNDEFINED", scope="MobileNetV2/Sequential[features]/InvertedResidual[10]/Sequential[conv]/ConvBNReLU[1]/NNCFConv2d[0]/ModuleDict[pre_ops]/UpdateWeight[0]/SymmetricQuantizer[op]", style=filled, type=symmetric_quantize];
"135 MobileNetV2/Sequential[features]/InvertedResidual[10]/Sequential[conv]/ConvBNReLU[1]/NNCFConv2d[0]/conv2d" [color=purple, id=135, label=DW_Conv2d, scope="MobileNetV2/Sequential[features]/InvertedResidual[10]/Sequential[conv]/ConvBNReLU[1]/NNCFConv2d[0]", style=filled, type=conv2d];
"136 MobileNetV2/Sequential[features]/InvertedResidual[10]/Sequential[conv]/ConvBNReLU[1]/BatchNorm2d[1]/batch_norm" [id=136, label=batch_norm, scope="MobileNetV2/Sequential[features]/InvertedResidual[10]/Sequential[conv]/ConvBNReLU[1]/BatchNorm2d[1]", style=filled, type=batch_norm];
"137 MobileNetV2/Sequential[features]/InvertedResidual[10]/Sequential[conv]/ConvBNReLU[1]/ReLU6[2]/hardtanh" [id=137, label=hardtanh, scope="MobileNetV2/Sequential[features]/InvertedResidual[10]/Sequential[conv]/ConvBNReLU[1]/ReLU6[2]", style=filled, type=hardtanh];
"138 MobileNetV2/Sequential[features]/InvertedResidual[10]/Sequential[conv]/NNCFConv2d[2]/ModuleDict[pre_ops]/UpdateWeight[0]/SymmetricQuantizer[op]/symmetric_quantize" [color=orange, id=138, label="6_bit__WFQ_#4", scope="MobileNetV2/Sequential[features]/InvertedResidual[10]/Sequential[conv]/NNCFConv2d[2]/ModuleDict[pre_ops]/UpdateWeight[0]/SymmetricQuantizer[op]", style=filled, type=symmetric_quantize];
"139 MobileNetV2/Sequential[features]/InvertedResidual[10]/Sequential[conv]/NNCFConv2d[2]/conv2d" [color=lightblue, id=139, label=conv2d, scope="MobileNetV2/Sequential[features]/InvertedResidual[10]/Sequential[conv]/NNCFConv2d[2]", style=filled, type=conv2d];
"140 MobileNetV2/Sequential[features]/InvertedResidual[10]/Sequential[conv]/BatchNorm2d[3]/batch_norm" [id=140, label=batch_norm, scope="MobileNetV2/Sequential[features]/InvertedResidual[10]/Sequential[conv]/BatchNorm2d[3]", style=filled, type=batch_norm];
"141 MobileNetV2/Sequential[features]/InvertedResidual[10]/Sequential[conv]/BatchNorm2d[3]/SymmetricQuantizer/symmetric_quantize" [color=orange, id=141, label="6_bit__AFQ_#3", scope="MobileNetV2/Sequential[features]/InvertedResidual[10]/Sequential[conv]/BatchNorm2d[3]/SymmetricQuantizer", style=filled, type=symmetric_quantize];
"142 MobileNetV2/Sequential[features]/InvertedResidual[10]/__add__" [id=142, label=__add__, scope="MobileNetV2/Sequential[features]/InvertedResidual[10]", style=filled, type=__add__];
"143 MobileNetV2/Sequential[features]/InvertedResidual[10]/SymmetricQuantizer/symmetric_quantize" [color=orange, id=143, label="6_bit__AFQ_#5", scope="MobileNetV2/Sequential[features]/InvertedResidual[10]/SymmetricQuantizer", style=filled, type=symmetric_quantize];
"144 MobileNetV2/Sequential[features]/InvertedResidual[11]/Sequential[conv]/ConvBNReLU[0]/NNCFConv2d[0]/ModuleDict[pre_ops]/UpdateWeight[0]/SymmetricQuantizer[op]/symmetric_quantize" [color=orange, id=144, label="6_bit__WFQ_#5", scope="MobileNetV2/Sequential[features]/InvertedResidual[11]/Sequential[conv]/ConvBNReLU[0]/NNCFConv2d[0]/ModuleDict[pre_ops]/UpdateWeight[0]/SymmetricQuantizer[op]", style=filled, type=symmetric_quantize];
"145 MobileNetV2/Sequential[features]/InvertedResidual[11]/Sequential[conv]/ConvBNReLU[0]/NNCFConv2d[0]/conv2d" [color=lightblue, id=145, label=conv2d, scope="MobileNetV2/Sequential[features]/InvertedResidual[11]/Sequential[conv]/ConvBNReLU[0]/NNCFConv2d[0]", style=filled, type=conv2d];
"146 MobileNetV2/Sequential[features]/InvertedResidual[11]/Sequential[conv]/ConvBNReLU[0]/BatchNorm2d[1]/batch_norm" [id=146, label=batch_norm, scope="MobileNetV2/Sequential[features]/InvertedResidual[11]/Sequential[conv]/ConvBNReLU[0]/BatchNorm2d[1]", style=filled, type=batch_norm];
"147 MobileNetV2/Sequential[features]/InvertedResidual[11]/Sequential[conv]/ConvBNReLU[0]/ReLU6[2]/hardtanh" [id=147, label=hardtanh, scope="MobileNetV2/Sequential[features]/InvertedResidual[11]/Sequential[conv]/ConvBNReLU[0]/ReLU6[2]", style=filled, type=hardtanh];
"148 MobileNetV2/Sequential[features]/InvertedResidual[11]/Sequential[conv]/ConvBNReLU[0]/ReLU6[2]/SymmetricQuantizer/symmetric_quantize" [color=orange, id=148, label="6_bit__AFQ_#7", scope="MobileNetV2/Sequential[features]/InvertedResidual[11]/Sequential[conv]/ConvBNReLU[0]/ReLU6[2]/SymmetricQuantizer", style=filled, type=symmetric_quantize];
"149 MobileNetV2/Sequential[features]/InvertedResidual[11]/Sequential[conv]/ConvBNReLU[1]/NNCFConv2d[0]/ModuleDict[pre_ops]/UpdateWeight[0]/SymmetricQuantizer[op]/symmetric_quantize" [color=orange, id=149, label="6_bit__WFQ_#UNDEFINED", scope="MobileNetV2/Sequential[features]/InvertedResidual[11]/Sequential[conv]/ConvBNReLU[1]/NNCFConv2d[0]/ModuleDict[pre_ops]/UpdateWeight[0]/SymmetricQuantizer[op]", style=filled, type=symmetric_quantize];
"150 MobileNetV2/Sequential[features]/InvertedResidual[11]/Sequential[conv]/ConvBNReLU[1]/NNCFConv2d[0]/conv2d" [color=purple, id=150, label=DW_Conv2d, scope="MobileNetV2/Sequential[features]/InvertedResidual[11]/Sequential[conv]/ConvBNReLU[1]/NNCFConv2d[0]", style=filled, type=conv2d];
"151 MobileNetV2/Sequential[features]/InvertedResidual[11]/Sequential[conv]/ConvBNReLU[1]/BatchNorm2d[1]/batch_norm" [id=151, label=batch_norm, scope="MobileNetV2/Sequential[features]/InvertedResidual[11]/Sequential[conv]/ConvBNReLU[1]/BatchNorm2d[1]", style=filled, type=batch_norm];
"152 MobileNetV2/Sequential[features]/InvertedResidual[11]/Sequential[conv]/ConvBNReLU[1]/ReLU6[2]/hardtanh" [id=152, label=hardtanh, scope="MobileNetV2/Sequential[features]/InvertedResidual[11]/Sequential[conv]/ConvBNReLU[1]/ReLU6[2]", style=filled, type=hardtanh];
"153 MobileNetV2/Sequential[features]/InvertedResidual[11]/Sequential[conv]/NNCFConv2d[2]/ModuleDict[pre_ops]/UpdateWeight[0]/SymmetricQuantizer[op]/symmetric_quantize" [color=orange, id=153, label="6_bit__WFQ_#7", scope="MobileNetV2/Sequential[features]/InvertedResidual[11]/Sequential[conv]/NNCFConv2d[2]/ModuleDict[pre_ops]/UpdateWeight[0]/SymmetricQuantizer[op]", style=filled, type=symmetric_quantize];
"154 MobileNetV2/Sequential[features]/InvertedResidual[11]/Sequential[conv]/NNCFConv2d[2]/conv2d" [color=lightblue, id=154, label=conv2d, scope="MobileNetV2/Sequential[features]/InvertedResidual[11]/Sequential[conv]/NNCFConv2d[2]", style=filled, type=conv2d];
"155 MobileNetV2/Sequential[features]/InvertedResidual[11]/Sequential[conv]/BatchNorm2d[3]/batch_norm" [id=155, label=batch_norm, scope="MobileNetV2/Sequential[features]/InvertedResidual[11]/Sequential[conv]/BatchNorm2d[3]", style=filled, type=batch_norm];
"156 MobileNetV2/Sequential[features]/InvertedResidual[11]/Sequential[conv]/BatchNorm2d[3]/SymmetricQuantizer/symmetric_quantize" [color=orange, id=156, label="6_bit__AFQ_#6", scope="MobileNetV2/Sequential[features]/InvertedResidual[11]/Sequential[conv]/BatchNorm2d[3]/SymmetricQuantizer", style=filled, type=symmetric_quantize];
"157 MobileNetV2/Sequential[features]/InvertedResidual[12]/Sequential[conv]/ConvBNReLU[0]/NNCFConv2d[0]/ModuleDict[pre_ops]/UpdateWeight[0]/SymmetricQuantizer[op]/symmetric_quantize" [color=orange, id=157, label="6_bit__WFQ_#6", scope="MobileNetV2/Sequential[features]/InvertedResidual[12]/Sequential[conv]/ConvBNReLU[0]/NNCFConv2d[0]/ModuleDict[pre_ops]/UpdateWeight[0]/SymmetricQuantizer[op]", style=filled, type=symmetric_quantize];
"158 MobileNetV2/Sequential[features]/InvertedResidual[12]/Sequential[conv]/ConvBNReLU[0]/NNCFConv2d[0]/conv2d" [color=lightblue, id=158, label=conv2d, scope="MobileNetV2/Sequential[features]/InvertedResidual[12]/Sequential[conv]/ConvBNReLU[0]/NNCFConv2d[0]", style=filled, type=conv2d];
"159 MobileNetV2/Sequential[features]/InvertedResidual[12]/Sequential[conv]/ConvBNReLU[0]/BatchNorm2d[1]/batch_norm" [id=159, label=batch_norm, scope="MobileNetV2/Sequential[features]/InvertedResidual[12]/Sequential[conv]/ConvBNReLU[0]/BatchNorm2d[1]", style=filled, type=batch_norm];
"160 MobileNetV2/Sequential[features]/InvertedResidual[12]/Sequential[conv]/ConvBNReLU[0]/ReLU6[2]/hardtanh" [id=160, label=hardtanh, scope="MobileNetV2/Sequential[features]/InvertedResidual[12]/Sequential[conv]/ConvBNReLU[0]/ReLU6[2]", style=filled, type=hardtanh];
"161 MobileNetV2/Sequential[features]/InvertedResidual[12]/Sequential[conv]/ConvBNReLU[0]/ReLU6[2]/SymmetricQuantizer/symmetric_quantize" [color=orange, id=161, label="6_bit__AFQ_#8", scope="MobileNetV2/Sequential[features]/InvertedResidual[12]/Sequential[conv]/ConvBNReLU[0]/ReLU6[2]/SymmetricQuantizer", style=filled, type=symmetric_quantize];
"162 MobileNetV2/Sequential[features]/InvertedResidual[12]/Sequential[conv]/ConvBNReLU[1]/NNCFConv2d[0]/ModuleDict[pre_ops]/UpdateWeight[0]/SymmetricQuantizer[op]/symmetric_quantize" [color=orange, id=162, label="6_bit__WFQ_#UNDEFINED", scope="MobileNetV2/Sequential[features]/InvertedResidual[12]/Sequential[conv]/ConvBNReLU[1]/NNCFConv2d[0]/ModuleDict[pre_ops]/UpdateWeight[0]/SymmetricQuantizer[op]", style=filled, type=symmetric_quantize];
"163 MobileNetV2/Sequential[features]/InvertedResidual[12]/Sequential[conv]/ConvBNReLU[1]/NNCFConv2d[0]/conv2d" [color=purple, id=163, label=DW_Conv2d, scope="MobileNetV2/Sequential[features]/InvertedResidual[12]/Sequential[conv]/ConvBNReLU[1]/NNCFConv2d[0]", style=filled, type=conv2d];
"164 MobileNetV2/Sequential[features]/InvertedResidual[12]/Sequential[conv]/ConvBNReLU[1]/BatchNorm2d[1]/batch_norm" [id=164, label=batch_norm, scope="MobileNetV2/Sequential[features]/InvertedResidual[12]/Sequential[conv]/ConvBNReLU[1]/BatchNorm2d[1]", style=filled, type=batch_norm];
"165 MobileNetV2/Sequential[features]/InvertedResidual[12]/Sequential[conv]/ConvBNReLU[1]/ReLU6[2]/hardtanh" [id=165, label=hardtanh, scope="MobileNetV2/Sequential[features]/InvertedResidual[12]/Sequential[conv]/ConvBNReLU[1]/ReLU6[2]", style=filled, type=hardtanh];
"166 MobileNetV2/Sequential[features]/InvertedResidual[12]/Sequential[conv]/NNCFConv2d[2]/ModuleDict[pre_ops]/UpdateWeight[0]/SymmetricQuantizer[op]/symmetric_quantize" [color=orange, id=166, label="6_bit__WFQ_#8", scope="MobileNetV2/Sequential[features]/InvertedResidual[12]/Sequential[conv]/NNCFConv2d[2]/ModuleDict[pre_ops]/UpdateWeight[0]/SymmetricQuantizer[op]", style=filled, type=symmetric_quantize];
"167 MobileNetV2/Sequential[features]/InvertedResidual[12]/Sequential[conv]/NNCFConv2d[2]/conv2d" [color=lightblue, id=167, label=conv2d, scope="MobileNetV2/Sequential[features]/InvertedResidual[12]/Sequential[conv]/NNCFConv2d[2]", style=filled, type=conv2d];
"168 MobileNetV2/Sequential[features]/InvertedResidual[12]/Sequential[conv]/BatchNorm2d[3]/batch_norm" [id=168, label=batch_norm, scope="MobileNetV2/Sequential[features]/InvertedResidual[12]/Sequential[conv]/BatchNorm2d[3]", style=filled, type=batch_norm];
"169 MobileNetV2/Sequential[features]/InvertedResidual[12]/Sequential[conv]/BatchNorm2d[3]/SymmetricQuantizer/symmetric_quantize" [color=orange, id=169, label="6_bit__AFQ_#6", scope="MobileNetV2/Sequential[features]/InvertedResidual[12]/Sequential[conv]/BatchNorm2d[3]/SymmetricQuantizer", style=filled, type=symmetric_quantize];
"170 MobileNetV2/Sequential[features]/InvertedResidual[12]/__add__" [id=170, label=__add__, scope="MobileNetV2/Sequential[features]/InvertedResidual[12]", style=filled, type=__add__];
"171 MobileNetV2/Sequential[features]/InvertedResidual[12]/SymmetricQuantizer/symmetric_quantize" [color=orange, id=171, label="6_bit__AFQ_#9", scope="MobileNetV2/Sequential[features]/InvertedResidual[12]/SymmetricQuantizer", style=filled, type=symmetric_quantize];
"172 MobileNetV2/Sequential[features]/InvertedResidual[13]/Sequential[conv]/ConvBNReLU[0]/NNCFConv2d[0]/ModuleDict[pre_ops]/UpdateWeight[0]/SymmetricQuantizer[op]/symmetric_quantize" [color=orange, id=172, label="6_bit__WFQ_#9", scope="MobileNetV2/Sequential[features]/InvertedResidual[13]/Sequential[conv]/ConvBNReLU[0]/NNCFConv2d[0]/ModuleDict[pre_ops]/UpdateWeight[0]/SymmetricQuantizer[op]", style=filled, type=symmetric_quantize];
"173 MobileNetV2/Sequential[features]/InvertedResidual[13]/Sequential[conv]/ConvBNReLU[0]/NNCFConv2d[0]/conv2d" [color=lightblue, id=173, label=conv2d, scope="MobileNetV2/Sequential[features]/InvertedResidual[13]/Sequential[conv]/ConvBNReLU[0]/NNCFConv2d[0]", style=filled, type=conv2d];
"174 MobileNetV2/Sequential[features]/InvertedResidual[13]/Sequential[conv]/ConvBNReLU[0]/BatchNorm2d[1]/batch_norm" [id=174, label=batch_norm, scope="MobileNetV2/Sequential[features]/InvertedResidual[13]/Sequential[conv]/ConvBNReLU[0]/BatchNorm2d[1]", style=filled, type=batch_norm];
"175 MobileNetV2/Sequential[features]/InvertedResidual[13]/Sequential[conv]/ConvBNReLU[0]/ReLU6[2]/hardtanh" [id=175, label=hardtanh, scope="MobileNetV2/Sequential[features]/InvertedResidual[13]/Sequential[conv]/ConvBNReLU[0]/ReLU6[2]", style=filled, type=hardtanh];
"176 MobileNetV2/Sequential[features]/InvertedResidual[13]/Sequential[conv]/ConvBNReLU[0]/ReLU6[2]/SymmetricQuantizer/symmetric_quantize" [color=orange, id=176, label="6_bit__AFQ_#10", scope="MobileNetV2/Sequential[features]/InvertedResidual[13]/Sequential[conv]/ConvBNReLU[0]/ReLU6[2]/SymmetricQuantizer", style=filled, type=symmetric_quantize];
"177 MobileNetV2/Sequential[features]/InvertedResidual[13]/Sequential[conv]/ConvBNReLU[1]/NNCFConv2d[0]/ModuleDict[pre_ops]/UpdateWeight[0]/SymmetricQuantizer[op]/symmetric_quantize" [color=orange, id=177, label="6_bit__WFQ_#UNDEFINED", scope="MobileNetV2/Sequential[features]/InvertedResidual[13]/Sequential[conv]/ConvBNReLU[1]/NNCFConv2d[0]/ModuleDict[pre_ops]/UpdateWeight[0]/SymmetricQuantizer[op]", style=filled, type=symmetric_quantize];
"178 MobileNetV2/Sequential[features]/InvertedResidual[13]/Sequential[conv]/ConvBNReLU[1]/NNCFConv2d[0]/conv2d" [color=purple, id=178, label=DW_Conv2d, scope="MobileNetV2/Sequential[features]/InvertedResidual[13]/Sequential[conv]/ConvBNReLU[1]/NNCFConv2d[0]", style=filled, type=conv2d];
"179 MobileNetV2/Sequential[features]/InvertedResidual[13]/Sequential[conv]/ConvBNReLU[1]/BatchNorm2d[1]/batch_norm" [id=179, label=batch_norm, scope="MobileNetV2/Sequential[features]/InvertedResidual[13]/Sequential[conv]/ConvBNReLU[1]/BatchNorm2d[1]", style=filled, type=batch_norm];
"180 MobileNetV2/Sequential[features]/InvertedResidual[13]/Sequential[conv]/ConvBNReLU[1]/ReLU6[2]/hardtanh" [id=180, label=hardtanh, scope="MobileNetV2/Sequential[features]/InvertedResidual[13]/Sequential[conv]/ConvBNReLU[1]/ReLU6[2]", style=filled, type=hardtanh];
"181 MobileNetV2/Sequential[features]/InvertedResidual[13]/Sequential[conv]/NNCFConv2d[2]/ModuleDict[pre_ops]/UpdateWeight[0]/SymmetricQuantizer[op]/symmetric_quantize" [color=orange, id=181, label="6_bit__WFQ_#10", scope="MobileNetV2/Sequential[features]/InvertedResidual[13]/Sequential[conv]/NNCFConv2d[2]/ModuleDict[pre_ops]/UpdateWeight[0]/SymmetricQuantizer[op]", style=filled, type=symmetric_quantize];
"182 MobileNetV2/Sequential[features]/InvertedResidual[13]/Sequential[conv]/NNCFConv2d[2]/conv2d" [color=lightblue, id=182, label=conv2d, scope="MobileNetV2/Sequential[features]/InvertedResidual[13]/Sequential[conv]/NNCFConv2d[2]", style=filled, type=conv2d];
"183 MobileNetV2/Sequential[features]/InvertedResidual[13]/Sequential[conv]/BatchNorm2d[3]/batch_norm" [id=183, label=batch_norm, scope="MobileNetV2/Sequential[features]/InvertedResidual[13]/Sequential[conv]/BatchNorm2d[3]", style=filled, type=batch_norm];
"184 MobileNetV2/Sequential[features]/InvertedResidual[13]/Sequential[conv]/BatchNorm2d[3]/SymmetricQuantizer/symmetric_quantize" [color=orange, id=184, label="6_bit__AFQ_#9", scope="MobileNetV2/Sequential[features]/InvertedResidual[13]/Sequential[conv]/BatchNorm2d[3]/SymmetricQuantizer", style=filled, type=symmetric_quantize];
"185 MobileNetV2/Sequential[features]/InvertedResidual[13]/__add__" [id=185, label=__add__, scope="MobileNetV2/Sequential[features]/InvertedResidual[13]", style=filled, type=__add__];
"186 MobileNetV2/Sequential[features]/InvertedResidual[13]/SymmetricQuantizer/symmetric_quantize" [color=orange, id=186, label="6_bit__AFQ_#11", scope="MobileNetV2/Sequential[features]/InvertedResidual[13]/SymmetricQuantizer", style=filled, type=symmetric_quantize];
"187 MobileNetV2/Sequential[features]/InvertedResidual[14]/Sequential[conv]/ConvBNReLU[0]/NNCFConv2d[0]/ModuleDict[pre_ops]/UpdateWeight[0]/SymmetricQuantizer[op]/symmetric_quantize" [color=orange, id=187, label="6_bit__WFQ_#11", scope="MobileNetV2/Sequential[features]/InvertedResidual[14]/Sequential[conv]/ConvBNReLU[0]/NNCFConv2d[0]/ModuleDict[pre_ops]/UpdateWeight[0]/SymmetricQuantizer[op]", style=filled, type=symmetric_quantize];
"188 MobileNetV2/Sequential[features]/InvertedResidual[14]/Sequential[conv]/ConvBNReLU[0]/NNCFConv2d[0]/conv2d" [color=lightblue, id=188, label=conv2d, scope="MobileNetV2/Sequential[features]/InvertedResidual[14]/Sequential[conv]/ConvBNReLU[0]/NNCFConv2d[0]", style=filled, type=conv2d];
"189 MobileNetV2/Sequential[features]/InvertedResidual[14]/Sequential[conv]/ConvBNReLU[0]/BatchNorm2d[1]/batch_norm" [id=189, label=batch_norm, scope="MobileNetV2/Sequential[features]/InvertedResidual[14]/Sequential[conv]/ConvBNReLU[0]/BatchNorm2d[1]", style=filled, type=batch_norm];
"190 MobileNetV2/Sequential[features]/InvertedResidual[14]/Sequential[conv]/ConvBNReLU[0]/ReLU6[2]/hardtanh" [id=190, label=hardtanh, scope="MobileNetV2/Sequential[features]/InvertedResidual[14]/Sequential[conv]/ConvBNReLU[0]/ReLU6[2]", style=filled, type=hardtanh];
"191 MobileNetV2/Sequential[features]/InvertedResidual[14]/Sequential[conv]/ConvBNReLU[0]/ReLU6[2]/SymmetricQuantizer/symmetric_quantize" [color=orange, id=191, label="6_bit__AFQ_#13", scope="MobileNetV2/Sequential[features]/InvertedResidual[14]/Sequential[conv]/ConvBNReLU[0]/ReLU6[2]/SymmetricQuantizer", style=filled, type=symmetric_quantize];
"192 MobileNetV2/Sequential[features]/InvertedResidual[14]/Sequential[conv]/ConvBNReLU[1]/NNCFConv2d[0]/ModuleDict[pre_ops]/UpdateWeight[0]/SymmetricQuantizer[op]/symmetric_quantize" [color=orange, id=192, label="6_bit__WFQ_#UNDEFINED", scope="MobileNetV2/Sequential[features]/InvertedResidual[14]/Sequential[conv]/ConvBNReLU[1]/NNCFConv2d[0]/ModuleDict[pre_ops]/UpdateWeight[0]/SymmetricQuantizer[op]", style=filled, type=symmetric_quantize];
"193 MobileNetV2/Sequential[features]/InvertedResidual[14]/Sequential[conv]/ConvBNReLU[1]/NNCFConv2d[0]/conv2d" [color=purple, id=193, label=DW_Conv2d, scope="MobileNetV2/Sequential[features]/InvertedResidual[14]/Sequential[conv]/ConvBNReLU[1]/NNCFConv2d[0]", style=filled, type=conv2d];
"194 MobileNetV2/Sequential[features]/InvertedResidual[14]/Sequential[conv]/ConvBNReLU[1]/BatchNorm2d[1]/batch_norm" [id=194, label=batch_norm, scope="MobileNetV2/Sequential[features]/InvertedResidual[14]/Sequential[conv]/ConvBNReLU[1]/BatchNorm2d[1]", style=filled, type=batch_norm];
"195 MobileNetV2/Sequential[features]/InvertedResidual[14]/Sequential[conv]/ConvBNReLU[1]/ReLU6[2]/hardtanh" [id=195, label=hardtanh, scope="MobileNetV2/Sequential[features]/InvertedResidual[14]/Sequential[conv]/ConvBNReLU[1]/ReLU6[2]", style=filled, type=hardtanh];
"196 MobileNetV2/Sequential[features]/InvertedResidual[14]/Sequential[conv]/NNCFConv2d[2]/ModuleDict[pre_ops]/UpdateWeight[0]/SymmetricQuantizer[op]/symmetric_quantize" [color=orange, id=196, label="6_bit__WFQ_#13", scope="MobileNetV2/Sequential[features]/InvertedResidual[14]/Sequential[conv]/NNCFConv2d[2]/ModuleDict[pre_ops]/UpdateWeight[0]/SymmetricQuantizer[op]", style=filled, type=symmetric_quantize];
"197 MobileNetV2/Sequential[features]/InvertedResidual[14]/Sequential[conv]/NNCFConv2d[2]/conv2d" [color=lightblue, id=197, label=conv2d, scope="MobileNetV2/Sequential[features]/InvertedResidual[14]/Sequential[conv]/NNCFConv2d[2]", style=filled, type=conv2d];
"198 MobileNetV2/Sequential[features]/InvertedResidual[14]/Sequential[conv]/BatchNorm2d[3]/batch_norm" [id=198, label=batch_norm, scope="MobileNetV2/Sequential[features]/InvertedResidual[14]/Sequential[conv]/BatchNorm2d[3]", style=filled, type=batch_norm];
"199 MobileNetV2/Sequential[features]/InvertedResidual[14]/Sequential[conv]/BatchNorm2d[3]/SymmetricQuantizer/symmetric_quantize" [color=orange, id=199, label="6_bit__AFQ_#12", scope="MobileNetV2/Sequential[features]/InvertedResidual[14]/Sequential[conv]/BatchNorm2d[3]/SymmetricQuantizer", style=filled, type=symmetric_quantize];
"200 MobileNetV2/Sequential[features]/InvertedResidual[15]/Sequential[conv]/ConvBNReLU[0]/NNCFConv2d[0]/ModuleDict[pre_ops]/UpdateWeight[0]/SymmetricQuantizer[op]/symmetric_quantize" [color=orange, id=200, label="6_bit__WFQ_#12", scope="MobileNetV2/Sequential[features]/InvertedResidual[15]/Sequential[conv]/ConvBNReLU[0]/NNCFConv2d[0]/ModuleDict[pre_ops]/UpdateWeight[0]/SymmetricQuantizer[op]", style=filled, type=symmetric_quantize];
"201 MobileNetV2/Sequential[features]/InvertedResidual[15]/Sequential[conv]/ConvBNReLU[0]/NNCFConv2d[0]/conv2d" [color=lightblue, id=201, label=conv2d, scope="MobileNetV2/Sequential[features]/InvertedResidual[15]/Sequential[conv]/ConvBNReLU[0]/NNCFConv2d[0]", style=filled, type=conv2d];
"202 MobileNetV2/Sequential[features]/InvertedResidual[15]/Sequential[conv]/ConvBNReLU[0]/BatchNorm2d[1]/batch_norm" [id=202, label=batch_norm, scope="MobileNetV2/Sequential[features]/InvertedResidual[15]/Sequential[conv]/ConvBNReLU[0]/BatchNorm2d[1]", style=filled, type=batch_norm];
"203 MobileNetV2/Sequential[features]/InvertedResidual[15]/Sequential[conv]/ConvBNReLU[0]/ReLU6[2]/hardtanh" [id=203, label=hardtanh, scope="MobileNetV2/Sequential[features]/InvertedResidual[15]/Sequential[conv]/ConvBNReLU[0]/ReLU6[2]", style=filled, type=hardtanh];
"204 MobileNetV2/Sequential[features]/InvertedResidual[15]/Sequential[conv]/ConvBNReLU[0]/ReLU6[2]/SymmetricQuantizer/symmetric_quantize" [color=red, id=204, label="4_bit__AFQ_#14", scope="MobileNetV2/Sequential[features]/InvertedResidual[15]/Sequential[conv]/ConvBNReLU[0]/ReLU6[2]/SymmetricQuantizer", style=filled, type=symmetric_quantize];
"205 MobileNetV2/Sequential[features]/InvertedResidual[15]/Sequential[conv]/ConvBNReLU[1]/NNCFConv2d[0]/ModuleDict[pre_ops]/UpdateWeight[0]/SymmetricQuantizer[op]/symmetric_quantize" [color=orange, id=205, label="6_bit__WFQ_#UNDEFINED", scope="MobileNetV2/Sequential[features]/InvertedResidual[15]/Sequential[conv]/ConvBNReLU[1]/NNCFConv2d[0]/ModuleDict[pre_ops]/UpdateWeight[0]/SymmetricQuantizer[op]", style=filled, type=symmetric_quantize];
"206 MobileNetV2/Sequential[features]/InvertedResidual[15]/Sequential[conv]/ConvBNReLU[1]/NNCFConv2d[0]/conv2d" [color=purple, id=206, label=DW_Conv2d, scope="MobileNetV2/Sequential[features]/InvertedResidual[15]/Sequential[conv]/ConvBNReLU[1]/NNCFConv2d[0]", style=filled, type=conv2d];
"207 MobileNetV2/Sequential[features]/InvertedResidual[15]/Sequential[conv]/ConvBNReLU[1]/BatchNorm2d[1]/batch_norm" [id=207, label=batch_norm, scope="MobileNetV2/Sequential[features]/InvertedResidual[15]/Sequential[conv]/ConvBNReLU[1]/BatchNorm2d[1]", style=filled, type=batch_norm];
"208 MobileNetV2/Sequential[features]/InvertedResidual[15]/Sequential[conv]/ConvBNReLU[1]/ReLU6[2]/hardtanh" [id=208, label=hardtanh, scope="MobileNetV2/Sequential[features]/InvertedResidual[15]/Sequential[conv]/ConvBNReLU[1]/ReLU6[2]", style=filled, type=hardtanh];
"209 MobileNetV2/Sequential[features]/InvertedResidual[15]/Sequential[conv]/NNCFConv2d[2]/ModuleDict[pre_ops]/UpdateWeight[0]/SymmetricQuantizer[op]/symmetric_quantize" [color=red, id=209, label="4_bit__WFQ_#14", scope="MobileNetV2/Sequential[features]/InvertedResidual[15]/Sequential[conv]/NNCFConv2d[2]/ModuleDict[pre_ops]/UpdateWeight[0]/SymmetricQuantizer[op]", style=filled, type=symmetric_quantize];
"210 MobileNetV2/Sequential[features]/InvertedResidual[15]/Sequential[conv]/NNCFConv2d[2]/conv2d" [color=lightblue, id=210, label=conv2d, scope="MobileNetV2/Sequential[features]/InvertedResidual[15]/Sequential[conv]/NNCFConv2d[2]", style=filled, type=conv2d];
"211 MobileNetV2/Sequential[features]/InvertedResidual[15]/Sequential[conv]/BatchNorm2d[3]/batch_norm" [id=211, label=batch_norm, scope="MobileNetV2/Sequential[features]/InvertedResidual[15]/Sequential[conv]/BatchNorm2d[3]", style=filled, type=batch_norm];
"212 MobileNetV2/Sequential[features]/InvertedResidual[15]/Sequential[conv]/BatchNorm2d[3]/SymmetricQuantizer/symmetric_quantize" [color=orange, id=212, label="6_bit__AFQ_#12", scope="MobileNetV2/Sequential[features]/InvertedResidual[15]/Sequential[conv]/BatchNorm2d[3]/SymmetricQuantizer", style=filled, type=symmetric_quantize];
"213 MobileNetV2/Sequential[features]/InvertedResidual[15]/__add__" [id=213, label=__add__, scope="MobileNetV2/Sequential[features]/InvertedResidual[15]", style=filled, type=__add__];
"214 MobileNetV2/Sequential[features]/InvertedResidual[15]/SymmetricQuantizer/symmetric_quantize" [color=red, id=214, label="4_bit__AFQ_#15", scope="MobileNetV2/Sequential[features]/InvertedResidual[15]/SymmetricQuantizer", style=filled, type=symmetric_quantize];
"215 MobileNetV2/Sequential[features]/InvertedResidual[16]/Sequential[conv]/ConvBNReLU[0]/NNCFConv2d[0]/ModuleDict[pre_ops]/UpdateWeight[0]/SymmetricQuantizer[op]/symmetric_quantize" [color=red, id=215, label="4_bit__WFQ_#15", scope="MobileNetV2/Sequential[features]/InvertedResidual[16]/Sequential[conv]/ConvBNReLU[0]/NNCFConv2d[0]/ModuleDict[pre_ops]/UpdateWeight[0]/SymmetricQuantizer[op]", style=filled, type=symmetric_quantize];
"216 MobileNetV2/Sequential[features]/InvertedResidual[16]/Sequential[conv]/ConvBNReLU[0]/NNCFConv2d[0]/conv2d" [color=lightblue, id=216, label=conv2d, scope="MobileNetV2/Sequential[features]/InvertedResidual[16]/Sequential[conv]/ConvBNReLU[0]/NNCFConv2d[0]", style=filled, type=conv2d];
"217 MobileNetV2/Sequential[features]/InvertedResidual[16]/Sequential[conv]/ConvBNReLU[0]/BatchNorm2d[1]/batch_norm" [id=217, label=batch_norm, scope="MobileNetV2/Sequential[features]/InvertedResidual[16]/Sequential[conv]/ConvBNReLU[0]/BatchNorm2d[1]", style=filled, type=batch_norm];
"218 MobileNetV2/Sequential[features]/InvertedResidual[16]/Sequential[conv]/ConvBNReLU[0]/ReLU6[2]/hardtanh" [id=218, label=hardtanh, scope="MobileNetV2/Sequential[features]/InvertedResidual[16]/Sequential[conv]/ConvBNReLU[0]/ReLU6[2]", style=filled, type=hardtanh];
"219 MobileNetV2/Sequential[features]/InvertedResidual[16]/Sequential[conv]/ConvBNReLU[0]/ReLU6[2]/SymmetricQuantizer/symmetric_quantize" [color=red, id=219, label="4_bit__AFQ_#16", scope="MobileNetV2/Sequential[features]/InvertedResidual[16]/Sequential[conv]/ConvBNReLU[0]/ReLU6[2]/SymmetricQuantizer", style=filled, type=symmetric_quantize];
"220 MobileNetV2/Sequential[features]/InvertedResidual[16]/Sequential[conv]/ConvBNReLU[1]/NNCFConv2d[0]/ModuleDict[pre_ops]/UpdateWeight[0]/SymmetricQuantizer[op]/symmetric_quantize" [color=orange, id=220, label="6_bit__WFQ_#UNDEFINED", scope="MobileNetV2/Sequential[features]/InvertedResidual[16]/Sequential[conv]/ConvBNReLU[1]/NNCFConv2d[0]/ModuleDict[pre_ops]/UpdateWeight[0]/SymmetricQuantizer[op]", style=filled, type=symmetric_quantize];
"221 MobileNetV2/Sequential[features]/InvertedResidual[16]/Sequential[conv]/ConvBNReLU[1]/NNCFConv2d[0]/conv2d" [color=purple, id=221, label=DW_Conv2d, scope="MobileNetV2/Sequential[features]/InvertedResidual[16]/Sequential[conv]/ConvBNReLU[1]/NNCFConv2d[0]", style=filled, type=conv2d];
"222 MobileNetV2/Sequential[features]/InvertedResidual[16]/Sequential[conv]/ConvBNReLU[1]/BatchNorm2d[1]/batch_norm" [id=222, label=batch_norm, scope="MobileNetV2/Sequential[features]/InvertedResidual[16]/Sequential[conv]/ConvBNReLU[1]/BatchNorm2d[1]", style=filled, type=batch_norm];
"223 MobileNetV2/Sequential[features]/InvertedResidual[16]/Sequential[conv]/ConvBNReLU[1]/ReLU6[2]/hardtanh" [id=223, label=hardtanh, scope="MobileNetV2/Sequential[features]/InvertedResidual[16]/Sequential[conv]/ConvBNReLU[1]/ReLU6[2]", style=filled, type=hardtanh];
"224 MobileNetV2/Sequential[features]/InvertedResidual[16]/Sequential[conv]/NNCFConv2d[2]/ModuleDict[pre_ops]/UpdateWeight[0]/SymmetricQuantizer[op]/symmetric_quantize" [color=red, id=224, label="4_bit__WFQ_#16", scope="MobileNetV2/Sequential[features]/InvertedResidual[16]/Sequential[conv]/NNCFConv2d[2]/ModuleDict[pre_ops]/UpdateWeight[0]/SymmetricQuantizer[op]", style=filled, type=symmetric_quantize];
"225 MobileNetV2/Sequential[features]/InvertedResidual[16]/Sequential[conv]/NNCFConv2d[2]/conv2d" [color=lightblue, id=225, label=conv2d, scope="MobileNetV2/Sequential[features]/InvertedResidual[16]/Sequential[conv]/NNCFConv2d[2]", style=filled, type=conv2d];
"226 MobileNetV2/Sequential[features]/InvertedResidual[16]/Sequential[conv]/BatchNorm2d[3]/batch_norm" [id=226, label=batch_norm, scope="MobileNetV2/Sequential[features]/InvertedResidual[16]/Sequential[conv]/BatchNorm2d[3]", style=filled, type=batch_norm];
"227 MobileNetV2/Sequential[features]/InvertedResidual[16]/Sequential[conv]/BatchNorm2d[3]/SymmetricQuantizer/symmetric_quantize" [color=red, id=227, label="4_bit__AFQ_#15", scope="MobileNetV2/Sequential[features]/InvertedResidual[16]/Sequential[conv]/BatchNorm2d[3]/SymmetricQuantizer", style=filled, type=symmetric_quantize];
"228 MobileNetV2/Sequential[features]/InvertedResidual[16]/__add__" [id=228, label=__add__, scope="MobileNetV2/Sequential[features]/InvertedResidual[16]", style=filled, type=__add__];
"229 MobileNetV2/Sequential[features]/InvertedResidual[16]/SymmetricQuantizer/symmetric_quantize" [color=red, id=229, label="4_bit__AFQ_#17", scope="MobileNetV2/Sequential[features]/InvertedResidual[16]/SymmetricQuantizer", style=filled, type=symmetric_quantize];
"230 MobileNetV2/Sequential[features]/InvertedResidual[17]/Sequential[conv]/ConvBNReLU[0]/NNCFConv2d[0]/ModuleDict[pre_ops]/UpdateWeight[0]/SymmetricQuantizer[op]/symmetric_quantize" [color=red, id=230, label="4_bit__WFQ_#17", scope="MobileNetV2/Sequential[features]/InvertedResidual[17]/Sequential[conv]/ConvBNReLU[0]/NNCFConv2d[0]/ModuleDict[pre_ops]/UpdateWeight[0]/SymmetricQuantizer[op]", style=filled, type=symmetric_quantize];
"231 MobileNetV2/Sequential[features]/InvertedResidual[17]/Sequential[conv]/ConvBNReLU[0]/NNCFConv2d[0]/conv2d" [color=lightblue, id=231, label=conv2d, scope="MobileNetV2/Sequential[features]/InvertedResidual[17]/Sequential[conv]/ConvBNReLU[0]/NNCFConv2d[0]", style=filled, type=conv2d];
"232 MobileNetV2/Sequential[features]/InvertedResidual[17]/Sequential[conv]/ConvBNReLU[0]/BatchNorm2d[1]/batch_norm" [id=232, label=batch_norm, scope="MobileNetV2/Sequential[features]/InvertedResidual[17]/Sequential[conv]/ConvBNReLU[0]/BatchNorm2d[1]", style=filled, type=batch_norm];
"233 MobileNetV2/Sequential[features]/InvertedResidual[17]/Sequential[conv]/ConvBNReLU[0]/ReLU6[2]/hardtanh" [id=233, label=hardtanh, scope="MobileNetV2/Sequential[features]/InvertedResidual[17]/Sequential[conv]/ConvBNReLU[0]/ReLU6[2]", style=filled, type=hardtanh];
"234 MobileNetV2/Sequential[features]/InvertedResidual[17]/Sequential[conv]/ConvBNReLU[0]/ReLU6[2]/SymmetricQuantizer/symmetric_quantize" [color=red, id=234, label="4_bit__AFQ_#19", scope="MobileNetV2/Sequential[features]/InvertedResidual[17]/Sequential[conv]/ConvBNReLU[0]/ReLU6[2]/SymmetricQuantizer", style=filled, type=symmetric_quantize];
"235 MobileNetV2/Sequential[features]/InvertedResidual[17]/Sequential[conv]/ConvBNReLU[1]/NNCFConv2d[0]/ModuleDict[pre_ops]/UpdateWeight[0]/SymmetricQuantizer[op]/symmetric_quantize" [color=orange, id=235, label="6_bit__WFQ_#UNDEFINED", scope="MobileNetV2/Sequential[features]/InvertedResidual[17]/Sequential[conv]/ConvBNReLU[1]/NNCFConv2d[0]/ModuleDict[pre_ops]/UpdateWeight[0]/SymmetricQuantizer[op]", style=filled, type=symmetric_quantize];
"236 MobileNetV2/Sequential[features]/InvertedResidual[17]/Sequential[conv]/ConvBNReLU[1]/NNCFConv2d[0]/conv2d" [color=purple, id=236, label=DW_Conv2d, scope="MobileNetV2/Sequential[features]/InvertedResidual[17]/Sequential[conv]/ConvBNReLU[1]/NNCFConv2d[0]", style=filled, type=conv2d];
"237 MobileNetV2/Sequential[features]/InvertedResidual[17]/Sequential[conv]/ConvBNReLU[1]/BatchNorm2d[1]/batch_norm" [id=237, label=batch_norm, scope="MobileNetV2/Sequential[features]/InvertedResidual[17]/Sequential[conv]/ConvBNReLU[1]/BatchNorm2d[1]", style=filled, type=batch_norm];
"238 MobileNetV2/Sequential[features]/InvertedResidual[17]/Sequential[conv]/ConvBNReLU[1]/ReLU6[2]/hardtanh" [id=238, label=hardtanh, scope="MobileNetV2/Sequential[features]/InvertedResidual[17]/Sequential[conv]/ConvBNReLU[1]/ReLU6[2]", style=filled, type=hardtanh];
"239 MobileNetV2/Sequential[features]/InvertedResidual[17]/Sequential[conv]/NNCFConv2d[2]/ModuleDict[pre_ops]/UpdateWeight[0]/SymmetricQuantizer[op]/symmetric_quantize" [color=red, id=239, label="4_bit__WFQ_#19", scope="MobileNetV2/Sequential[features]/InvertedResidual[17]/Sequential[conv]/NNCFConv2d[2]/ModuleDict[pre_ops]/UpdateWeight[0]/SymmetricQuantizer[op]", style=filled, type=symmetric_quantize];
"240 MobileNetV2/Sequential[features]/InvertedResidual[17]/Sequential[conv]/NNCFConv2d[2]/conv2d" [color=lightblue, id=240, label=conv2d, scope="MobileNetV2/Sequential[features]/InvertedResidual[17]/Sequential[conv]/NNCFConv2d[2]", style=filled, type=conv2d];
"241 MobileNetV2/Sequential[features]/InvertedResidual[17]/Sequential[conv]/BatchNorm2d[3]/batch_norm" [id=241, label=batch_norm, scope="MobileNetV2/Sequential[features]/InvertedResidual[17]/Sequential[conv]/BatchNorm2d[3]", style=filled, type=batch_norm];
"242 MobileNetV2/Sequential[features]/InvertedResidual[17]/Sequential[conv]/BatchNorm2d[3]/SymmetricQuantizer/symmetric_quantize" [color=red, id=242, label="4_bit__AFQ_#18", scope="MobileNetV2/Sequential[features]/InvertedResidual[17]/Sequential[conv]/BatchNorm2d[3]/SymmetricQuantizer", style=filled, type=symmetric_quantize];
"243 MobileNetV2/Sequential[features]/ConvBNReLU[18]/NNCFConv2d[0]/ModuleDict[pre_ops]/UpdateWeight[0]/SymmetricQuantizer[op]/symmetric_quantize" [color=red, id=243, label="4_bit__WFQ_#18", scope="MobileNetV2/Sequential[features]/ConvBNReLU[18]/NNCFConv2d[0]/ModuleDict[pre_ops]/UpdateWeight[0]/SymmetricQuantizer[op]", style=filled, type=symmetric_quantize];
"244 MobileNetV2/Sequential[features]/ConvBNReLU[18]/NNCFConv2d[0]/conv2d" [color=lightblue, id=244, label=conv2d, scope="MobileNetV2/Sequential[features]/ConvBNReLU[18]/NNCFConv2d[0]", style=filled, type=conv2d];
"245 MobileNetV2/Sequential[features]/ConvBNReLU[18]/BatchNorm2d[1]/batch_norm" [id=245, label=batch_norm, scope="MobileNetV2/Sequential[features]/ConvBNReLU[18]/BatchNorm2d[1]", style=filled, type=batch_norm];
"246 MobileNetV2/Sequential[features]/ConvBNReLU[18]/ReLU6[2]/hardtanh" [id=246, label=hardtanh, scope="MobileNetV2/Sequential[features]/ConvBNReLU[18]/ReLU6[2]", style=filled, type=hardtanh];
"247 MobileNetV2/Sequential[features]/ConvBNReLU[18]/ReLU6[2]/SymmetricQuantizer/symmetric_quantize" [color=orange, id=247, label="6_bit__AFQ_#2", scope="MobileNetV2/Sequential[features]/ConvBNReLU[18]/ReLU6[2]/SymmetricQuantizer", style=filled, type=symmetric_quantize];
"248 MobileNetV2/adaptive_avg_pool2d" [id=248, label=adaptive_avg_pool2d, scope=MobileNetV2, style=filled, type=adaptive_avg_pool2d];
"249 MobileNetV2/Sequential[classifier]/Dropout[0]/dropout" [id=249, label=dropout, scope="MobileNetV2/Sequential[classifier]/Dropout[0]", style=filled, type=dropout];
"250 MobileNetV2/Sequential[classifier]/NNCFLinear[1]/ModuleDict[pre_ops]/UpdateWeight[0]/SymmetricQuantizer[op]/symmetric_quantize" [color=orange, id=250, label="6_bit__WFQ_#2", scope="MobileNetV2/Sequential[classifier]/NNCFLinear[1]/ModuleDict[pre_ops]/UpdateWeight[0]/SymmetricQuantizer[op]", style=filled, type=symmetric_quantize];
"251 MobileNetV2/Sequential[classifier]/NNCFLinear[1]/linear" [id=251, label=linear, scope="MobileNetV2/Sequential[classifier]/NNCFLinear[1]", style=filled, type=linear];
"0 /nncf_model_input" -> "1 SymmetricQuantizer/symmetric_quantize";
"1 SymmetricQuantizer/symmetric_quantize" -> "3 MobileNetV2/Sequential[features]/ConvBNReLU[0]/NNCFConv2d[0]/conv2d";
"2 MobileNetV2/Sequential[features]/ConvBNReLU[0]/NNCFConv2d[0]/ModuleDict[pre_ops]/UpdateWeight[0]/SymmetricQuantizer[op]/symmetric_quantize" -> "3 MobileNetV2/Sequential[features]/ConvBNReLU[0]/NNCFConv2d[0]/conv2d";
"3 MobileNetV2/Sequential[features]/ConvBNReLU[0]/NNCFConv2d[0]/conv2d" -> "4 MobileNetV2/Sequential[features]/ConvBNReLU[0]/BatchNorm2d[1]/batch_norm";
"4 MobileNetV2/Sequential[features]/ConvBNReLU[0]/BatchNorm2d[1]/batch_norm" -> "5 MobileNetV2/Sequential[features]/ConvBNReLU[0]/ReLU6[2]/hardtanh";
"5 MobileNetV2/Sequential[features]/ConvBNReLU[0]/ReLU6[2]/hardtanh" -> "6 MobileNetV2/Sequential[features]/ConvBNReLU[0]/ReLU6[2]/SymmetricQuantizer/symmetric_quantize";
"6 MobileNetV2/Sequential[features]/ConvBNReLU[0]/ReLU6[2]/SymmetricQuantizer/symmetric_quantize" -> "8 MobileNetV2/Sequential[features]/InvertedResidual[1]/Sequential[conv]/ConvBNReLU[0]/NNCFConv2d[0]/conv2d";
"7 MobileNetV2/Sequential[features]/InvertedResidual[1]/Sequential[conv]/ConvBNReLU[0]/NNCFConv2d[0]/ModuleDict[pre_ops]/UpdateWeight[0]/SymmetricQuantizer[op]/symmetric_quantize" -> "8 MobileNetV2/Sequential[features]/InvertedResidual[1]/Sequential[conv]/ConvBNReLU[0]/NNCFConv2d[0]/conv2d";
"8 MobileNetV2/Sequential[features]/InvertedResidual[1]/Sequential[conv]/ConvBNReLU[0]/NNCFConv2d[0]/conv2d" -> "9 MobileNetV2/Sequential[features]/InvertedResidual[1]/Sequential[conv]/ConvBNReLU[0]/BatchNorm2d[1]/batch_norm";
"9 MobileNetV2/Sequential[features]/InvertedResidual[1]/Sequential[conv]/ConvBNReLU[0]/BatchNorm2d[1]/batch_norm" -> "10 MobileNetV2/Sequential[features]/InvertedResidual[1]/Sequential[conv]/ConvBNReLU[0]/ReLU6[2]/hardtanh";
"10 MobileNetV2/Sequential[features]/InvertedResidual[1]/Sequential[conv]/ConvBNReLU[0]/ReLU6[2]/hardtanh" -> "12 MobileNetV2/Sequential[features]/InvertedResidual[1]/Sequential[conv]/NNCFConv2d[1]/conv2d";
"11 MobileNetV2/Sequential[features]/InvertedResidual[1]/Sequential[conv]/NNCFConv2d[1]/ModuleDict[pre_ops]/UpdateWeight[0]/SymmetricQuantizer[op]/symmetric_quantize" -> "12 MobileNetV2/Sequential[features]/InvertedResidual[1]/Sequential[conv]/NNCFConv2d[1]/conv2d";
"12 MobileNetV2/Sequential[features]/InvertedResidual[1]/Sequential[conv]/NNCFConv2d[1]/conv2d" -> "13 MobileNetV2/Sequential[features]/InvertedResidual[1]/Sequential[conv]/BatchNorm2d[2]/batch_norm";
"13 MobileNetV2/Sequential[features]/InvertedResidual[1]/Sequential[conv]/BatchNorm2d[2]/batch_norm" -> "14 MobileNetV2/Sequential[features]/InvertedResidual[1]/Sequential[conv]/BatchNorm2d[2]/SymmetricQuantizer/symmetric_quantize";
"14 MobileNetV2/Sequential[features]/InvertedResidual[1]/Sequential[conv]/BatchNorm2d[2]/SymmetricQuantizer/symmetric_quantize" -> "16 MobileNetV2/Sequential[features]/InvertedResidual[2]/Sequential[conv]/ConvBNReLU[0]/NNCFConv2d[0]/conv2d";
"15 MobileNetV2/Sequential[features]/InvertedResidual[2]/Sequential[conv]/ConvBNReLU[0]/NNCFConv2d[0]/ModuleDict[pre_ops]/UpdateWeight[0]/SymmetricQuantizer[op]/symmetric_quantize" -> "16 MobileNetV2/Sequential[features]/InvertedResidual[2]/Sequential[conv]/ConvBNReLU[0]/NNCFConv2d[0]/conv2d";
"16 MobileNetV2/Sequential[features]/InvertedResidual[2]/Sequential[conv]/ConvBNReLU[0]/NNCFConv2d[0]/conv2d" -> "17 MobileNetV2/Sequential[features]/InvertedResidual[2]/Sequential[conv]/ConvBNReLU[0]/BatchNorm2d[1]/batch_norm";
"17 MobileNetV2/Sequential[features]/InvertedResidual[2]/Sequential[conv]/ConvBNReLU[0]/BatchNorm2d[1]/batch_norm" -> "18 MobileNetV2/Sequential[features]/InvertedResidual[2]/Sequential[conv]/ConvBNReLU[0]/ReLU6[2]/hardtanh";
"18 MobileNetV2/Sequential[features]/InvertedResidual[2]/Sequential[conv]/ConvBNReLU[0]/ReLU6[2]/hardtanh" -> "19 MobileNetV2/Sequential[features]/InvertedResidual[2]/Sequential[conv]/ConvBNReLU[0]/ReLU6[2]/SymmetricQuantizer/symmetric_quantize";
"19 MobileNetV2/Sequential[features]/InvertedResidual[2]/Sequential[conv]/ConvBNReLU[0]/ReLU6[2]/SymmetricQuantizer/symmetric_quantize" -> "21 MobileNetV2/Sequential[features]/InvertedResidual[2]/Sequential[conv]/ConvBNReLU[1]/NNCFConv2d[0]/conv2d";
"20 MobileNetV2/Sequential[features]/InvertedResidual[2]/Sequential[conv]/ConvBNReLU[1]/NNCFConv2d[0]/ModuleDict[pre_ops]/UpdateWeight[0]/SymmetricQuantizer[op]/symmetric_quantize" -> "21 MobileNetV2/Sequential[features]/InvertedResidual[2]/Sequential[conv]/ConvBNReLU[1]/NNCFConv2d[0]/conv2d";
"21 MobileNetV2/Sequential[features]/InvertedResidual[2]/Sequential[conv]/ConvBNReLU[1]/NNCFConv2d[0]/conv2d" -> "22 MobileNetV2/Sequential[features]/InvertedResidual[2]/Sequential[conv]/ConvBNReLU[1]/BatchNorm2d[1]/batch_norm";
"22 MobileNetV2/Sequential[features]/InvertedResidual[2]/Sequential[conv]/ConvBNReLU[1]/BatchNorm2d[1]/batch_norm" -> "23 MobileNetV2/Sequential[features]/InvertedResidual[2]/Sequential[conv]/ConvBNReLU[1]/ReLU6[2]/hardtanh";
"23 MobileNetV2/Sequential[features]/InvertedResidual[2]/Sequential[conv]/ConvBNReLU[1]/ReLU6[2]/hardtanh" -> "25 MobileNetV2/Sequential[features]/InvertedResidual[2]/Sequential[conv]/NNCFConv2d[2]/conv2d";
"24 MobileNetV2/Sequential[features]/InvertedResidual[2]/Sequential[conv]/NNCFConv2d[2]/ModuleDict[pre_ops]/UpdateWeight[0]/SymmetricQuantizer[op]/symmetric_quantize" -> "25 MobileNetV2/Sequential[features]/InvertedResidual[2]/Sequential[conv]/NNCFConv2d[2]/conv2d";
"25 MobileNetV2/Sequential[features]/InvertedResidual[2]/Sequential[conv]/NNCFConv2d[2]/conv2d" -> "26 MobileNetV2/Sequential[features]/InvertedResidual[2]/Sequential[conv]/BatchNorm2d[3]/batch_norm";
"26 MobileNetV2/Sequential[features]/InvertedResidual[2]/Sequential[conv]/BatchNorm2d[3]/batch_norm" -> "27 MobileNetV2/Sequential[features]/InvertedResidual[2]/Sequential[conv]/BatchNorm2d[3]/SymmetricQuantizer/symmetric_quantize";
"27 MobileNetV2/Sequential[features]/InvertedResidual[2]/Sequential[conv]/BatchNorm2d[3]/SymmetricQuantizer/symmetric_quantize" -> "29 MobileNetV2/Sequential[features]/InvertedResidual[3]/Sequential[conv]/ConvBNReLU[0]/NNCFConv2d[0]/conv2d";
"27 MobileNetV2/Sequential[features]/InvertedResidual[2]/Sequential[conv]/BatchNorm2d[3]/SymmetricQuantizer/symmetric_quantize" -> "41 MobileNetV2/Sequential[features]/InvertedResidual[3]/__add__";
"28 MobileNetV2/Sequential[features]/InvertedResidual[3]/Sequential[conv]/ConvBNReLU[0]/NNCFConv2d[0]/ModuleDict[pre_ops]/UpdateWeight[0]/SymmetricQuantizer[op]/symmetric_quantize" -> "29 MobileNetV2/Sequential[features]/InvertedResidual[3]/Sequential[conv]/ConvBNReLU[0]/NNCFConv2d[0]/conv2d";
"29 MobileNetV2/Sequential[features]/InvertedResidual[3]/Sequential[conv]/ConvBNReLU[0]/NNCFConv2d[0]/conv2d" -> "30 MobileNetV2/Sequential[features]/InvertedResidual[3]/Sequential[conv]/ConvBNReLU[0]/BatchNorm2d[1]/batch_norm";
"30 MobileNetV2/Sequential[features]/InvertedResidual[3]/Sequential[conv]/ConvBNReLU[0]/BatchNorm2d[1]/batch_norm" -> "31 MobileNetV2/Sequential[features]/InvertedResidual[3]/Sequential[conv]/ConvBNReLU[0]/ReLU6[2]/hardtanh";
"31 MobileNetV2/Sequential[features]/InvertedResidual[3]/Sequential[conv]/ConvBNReLU[0]/ReLU6[2]/hardtanh" -> "32 MobileNetV2/Sequential[features]/InvertedResidual[3]/Sequential[conv]/ConvBNReLU[0]/ReLU6[2]/SymmetricQuantizer/symmetric_quantize";
"32 MobileNetV2/Sequential[features]/InvertedResidual[3]/Sequential[conv]/ConvBNReLU[0]/ReLU6[2]/SymmetricQuantizer/symmetric_quantize" -> "34 MobileNetV2/Sequential[features]/InvertedResidual[3]/Sequential[conv]/ConvBNReLU[1]/NNCFConv2d[0]/conv2d";
"33 MobileNetV2/Sequential[features]/InvertedResidual[3]/Sequential[conv]/ConvBNReLU[1]/NNCFConv2d[0]/ModuleDict[pre_ops]/UpdateWeight[0]/SymmetricQuantizer[op]/symmetric_quantize" -> "34 MobileNetV2/Sequential[features]/InvertedResidual[3]/Sequential[conv]/ConvBNReLU[1]/NNCFConv2d[0]/conv2d";
"34 MobileNetV2/Sequential[features]/InvertedResidual[3]/Sequential[conv]/ConvBNReLU[1]/NNCFConv2d[0]/conv2d" -> "35 MobileNetV2/Sequential[features]/InvertedResidual[3]/Sequential[conv]/ConvBNReLU[1]/BatchNorm2d[1]/batch_norm";
"35 MobileNetV2/Sequential[features]/InvertedResidual[3]/Sequential[conv]/ConvBNReLU[1]/BatchNorm2d[1]/batch_norm" -> "36 MobileNetV2/Sequential[features]/InvertedResidual[3]/Sequential[conv]/ConvBNReLU[1]/ReLU6[2]/hardtanh";
"36 MobileNetV2/Sequential[features]/InvertedResidual[3]/Sequential[conv]/ConvBNReLU[1]/ReLU6[2]/hardtanh" -> "38 MobileNetV2/Sequential[features]/InvertedResidual[3]/Sequential[conv]/NNCFConv2d[2]/conv2d";
"37 MobileNetV2/Sequential[features]/InvertedResidual[3]/Sequential[conv]/NNCFConv2d[2]/ModuleDict[pre_ops]/UpdateWeight[0]/SymmetricQuantizer[op]/symmetric_quantize" -> "38 MobileNetV2/Sequential[features]/InvertedResidual[3]/Sequential[conv]/NNCFConv2d[2]/conv2d";
"38 MobileNetV2/Sequential[features]/InvertedResidual[3]/Sequential[conv]/NNCFConv2d[2]/conv2d" -> "39 MobileNetV2/Sequential[features]/InvertedResidual[3]/Sequential[conv]/BatchNorm2d[3]/batch_norm";
"39 MobileNetV2/Sequential[features]/InvertedResidual[3]/Sequential[conv]/BatchNorm2d[3]/batch_norm" -> "40 MobileNetV2/Sequential[features]/InvertedResidual[3]/Sequential[conv]/BatchNorm2d[3]/SymmetricQuantizer/symmetric_quantize";
"40 MobileNetV2/Sequential[features]/InvertedResidual[3]/Sequential[conv]/BatchNorm2d[3]/SymmetricQuantizer/symmetric_quantize" -> "41 MobileNetV2/Sequential[features]/InvertedResidual[3]/__add__";
"41 MobileNetV2/Sequential[features]/InvertedResidual[3]/__add__" -> "42 MobileNetV2/Sequential[features]/InvertedResidual[3]/SymmetricQuantizer/symmetric_quantize";
"42 MobileNetV2/Sequential[features]/InvertedResidual[3]/SymmetricQuantizer/symmetric_quantize" -> "44 MobileNetV2/Sequential[features]/InvertedResidual[4]/Sequential[conv]/ConvBNReLU[0]/NNCFConv2d[0]/conv2d";
"43 MobileNetV2/Sequential[features]/InvertedResidual[4]/Sequential[conv]/ConvBNReLU[0]/NNCFConv2d[0]/ModuleDict[pre_ops]/UpdateWeight[0]/SymmetricQuantizer[op]/symmetric_quantize" -> "44 MobileNetV2/Sequential[features]/InvertedResidual[4]/Sequential[conv]/ConvBNReLU[0]/NNCFConv2d[0]/conv2d";
"44 MobileNetV2/Sequential[features]/InvertedResidual[4]/Sequential[conv]/ConvBNReLU[0]/NNCFConv2d[0]/conv2d" -> "45 MobileNetV2/Sequential[features]/InvertedResidual[4]/Sequential[conv]/ConvBNReLU[0]/BatchNorm2d[1]/batch_norm";
"45 MobileNetV2/Sequential[features]/InvertedResidual[4]/Sequential[conv]/ConvBNReLU[0]/BatchNorm2d[1]/batch_norm" -> "46 MobileNetV2/Sequential[features]/InvertedResidual[4]/Sequential[conv]/ConvBNReLU[0]/ReLU6[2]/hardtanh";
"46 MobileNetV2/Sequential[features]/InvertedResidual[4]/Sequential[conv]/ConvBNReLU[0]/ReLU6[2]/hardtanh" -> "47 MobileNetV2/Sequential[features]/InvertedResidual[4]/Sequential[conv]/ConvBNReLU[0]/ReLU6[2]/SymmetricQuantizer/symmetric_quantize";
"47 MobileNetV2/Sequential[features]/InvertedResidual[4]/Sequential[conv]/ConvBNReLU[0]/ReLU6[2]/SymmetricQuantizer/symmetric_quantize" -> "49 MobileNetV2/Sequential[features]/InvertedResidual[4]/Sequential[conv]/ConvBNReLU[1]/NNCFConv2d[0]/conv2d";
"48 MobileNetV2/Sequential[features]/InvertedResidual[4]/Sequential[conv]/ConvBNReLU[1]/NNCFConv2d[0]/ModuleDict[pre_ops]/UpdateWeight[0]/SymmetricQuantizer[op]/symmetric_quantize" -> "49 MobileNetV2/Sequential[features]/InvertedResidual[4]/Sequential[conv]/ConvBNReLU[1]/NNCFConv2d[0]/conv2d";
"49 MobileNetV2/Sequential[features]/InvertedResidual[4]/Sequential[conv]/ConvBNReLU[1]/NNCFConv2d[0]/conv2d" -> "50 MobileNetV2/Sequential[features]/InvertedResidual[4]/Sequential[conv]/ConvBNReLU[1]/BatchNorm2d[1]/batch_norm";
"50 MobileNetV2/Sequential[features]/InvertedResidual[4]/Sequential[conv]/ConvBNReLU[1]/BatchNorm2d[1]/batch_norm" -> "51 MobileNetV2/Sequential[features]/InvertedResidual[4]/Sequential[conv]/ConvBNReLU[1]/ReLU6[2]/hardtanh";
"51 MobileNetV2/Sequential[features]/InvertedResidual[4]/Sequential[conv]/ConvBNReLU[1]/ReLU6[2]/hardtanh" -> "53 MobileNetV2/Sequential[features]/InvertedResidual[4]/Sequential[conv]/NNCFConv2d[2]/conv2d";
"52 MobileNetV2/Sequential[features]/InvertedResidual[4]/Sequential[conv]/NNCFConv2d[2]/ModuleDict[pre_ops]/UpdateWeight[0]/SymmetricQuantizer[op]/symmetric_quantize" -> "53 MobileNetV2/Sequential[features]/InvertedResidual[4]/Sequential[conv]/NNCFConv2d[2]/conv2d";
"53 MobileNetV2/Sequential[features]/InvertedResidual[4]/Sequential[conv]/NNCFConv2d[2]/conv2d" -> "54 MobileNetV2/Sequential[features]/InvertedResidual[4]/Sequential[conv]/BatchNorm2d[3]/batch_norm";
"54 MobileNetV2/Sequential[features]/InvertedResidual[4]/Sequential[conv]/BatchNorm2d[3]/batch_norm" -> "55 MobileNetV2/Sequential[features]/InvertedResidual[4]/Sequential[conv]/BatchNorm2d[3]/SymmetricQuantizer/symmetric_quantize";
"55 MobileNetV2/Sequential[features]/InvertedResidual[4]/Sequential[conv]/BatchNorm2d[3]/SymmetricQuantizer/symmetric_quantize" -> "57 MobileNetV2/Sequential[features]/InvertedResidual[5]/Sequential[conv]/ConvBNReLU[0]/NNCFConv2d[0]/conv2d";
"55 MobileNetV2/Sequential[features]/InvertedResidual[4]/Sequential[conv]/BatchNorm2d[3]/SymmetricQuantizer/symmetric_quantize" -> "69 MobileNetV2/Sequential[features]/InvertedResidual[5]/__add__";
"56 MobileNetV2/Sequential[features]/InvertedResidual[5]/Sequential[conv]/ConvBNReLU[0]/NNCFConv2d[0]/ModuleDict[pre_ops]/UpdateWeight[0]/SymmetricQuantizer[op]/symmetric_quantize" -> "57 MobileNetV2/Sequential[features]/InvertedResidual[5]/Sequential[conv]/ConvBNReLU[0]/NNCFConv2d[0]/conv2d";
"57 MobileNetV2/Sequential[features]/InvertedResidual[5]/Sequential[conv]/ConvBNReLU[0]/NNCFConv2d[0]/conv2d" -> "58 MobileNetV2/Sequential[features]/InvertedResidual[5]/Sequential[conv]/ConvBNReLU[0]/BatchNorm2d[1]/batch_norm";
"58 MobileNetV2/Sequential[features]/InvertedResidual[5]/Sequential[conv]/ConvBNReLU[0]/BatchNorm2d[1]/batch_norm" -> "59 MobileNetV2/Sequential[features]/InvertedResidual[5]/Sequential[conv]/ConvBNReLU[0]/ReLU6[2]/hardtanh";
"59 MobileNetV2/Sequential[features]/InvertedResidual[5]/Sequential[conv]/ConvBNReLU[0]/ReLU6[2]/hardtanh" -> "60 MobileNetV2/Sequential[features]/InvertedResidual[5]/Sequential[conv]/ConvBNReLU[0]/ReLU6[2]/SymmetricQuantizer/symmetric_quantize";
"60 MobileNetV2/Sequential[features]/InvertedResidual[5]/Sequential[conv]/ConvBNReLU[0]/ReLU6[2]/SymmetricQuantizer/symmetric_quantize" -> "62 MobileNetV2/Sequential[features]/InvertedResidual[5]/Sequential[conv]/ConvBNReLU[1]/NNCFConv2d[0]/conv2d";
"61 MobileNetV2/Sequential[features]/InvertedResidual[5]/Sequential[conv]/ConvBNReLU[1]/NNCFConv2d[0]/ModuleDict[pre_ops]/UpdateWeight[0]/SymmetricQuantizer[op]/symmetric_quantize" -> "62 MobileNetV2/Sequential[features]/InvertedResidual[5]/Sequential[conv]/ConvBNReLU[1]/NNCFConv2d[0]/conv2d";
"62 MobileNetV2/Sequential[features]/InvertedResidual[5]/Sequential[conv]/ConvBNReLU[1]/NNCFConv2d[0]/conv2d" -> "63 MobileNetV2/Sequential[features]/InvertedResidual[5]/Sequential[conv]/ConvBNReLU[1]/BatchNorm2d[1]/batch_norm";
"63 MobileNetV2/Sequential[features]/InvertedResidual[5]/Sequential[conv]/ConvBNReLU[1]/BatchNorm2d[1]/batch_norm" -> "64 MobileNetV2/Sequential[features]/InvertedResidual[5]/Sequential[conv]/ConvBNReLU[1]/ReLU6[2]/hardtanh";
"64 MobileNetV2/Sequential[features]/InvertedResidual[5]/Sequential[conv]/ConvBNReLU[1]/ReLU6[2]/hardtanh" -> "66 MobileNetV2/Sequential[features]/InvertedResidual[5]/Sequential[conv]/NNCFConv2d[2]/conv2d";
"65 MobileNetV2/Sequential[features]/InvertedResidual[5]/Sequential[conv]/NNCFConv2d[2]/ModuleDict[pre_ops]/UpdateWeight[0]/SymmetricQuantizer[op]/symmetric_quantize" -> "66 MobileNetV2/Sequential[features]/InvertedResidual[5]/Sequential[conv]/NNCFConv2d[2]/conv2d";
"66 MobileNetV2/Sequential[features]/InvertedResidual[5]/Sequential[conv]/NNCFConv2d[2]/conv2d" -> "67 MobileNetV2/Sequential[features]/InvertedResidual[5]/Sequential[conv]/BatchNorm2d[3]/batch_norm";
"67 MobileNetV2/Sequential[features]/InvertedResidual[5]/Sequential[conv]/BatchNorm2d[3]/batch_norm" -> "68 MobileNetV2/Sequential[features]/InvertedResidual[5]/Sequential[conv]/BatchNorm2d[3]/SymmetricQuantizer/symmetric_quantize";
"68 MobileNetV2/Sequential[features]/InvertedResidual[5]/Sequential[conv]/BatchNorm2d[3]/SymmetricQuantizer/symmetric_quantize" -> "69 MobileNetV2/Sequential[features]/InvertedResidual[5]/__add__";
"69 MobileNetV2/Sequential[features]/InvertedResidual[5]/__add__" -> "70 MobileNetV2/Sequential[features]/InvertedResidual[5]/SymmetricQuantizer/symmetric_quantize";
"70 MobileNetV2/Sequential[features]/InvertedResidual[5]/SymmetricQuantizer/symmetric_quantize" -> "72 MobileNetV2/Sequential[features]/InvertedResidual[6]/Sequential[conv]/ConvBNReLU[0]/NNCFConv2d[0]/conv2d";
"70 MobileNetV2/Sequential[features]/InvertedResidual[5]/SymmetricQuantizer/symmetric_quantize" -> "84 MobileNetV2/Sequential[features]/InvertedResidual[6]/__add__";
"71 MobileNetV2/Sequential[features]/InvertedResidual[6]/Sequential[conv]/ConvBNReLU[0]/NNCFConv2d[0]/ModuleDict[pre_ops]/UpdateWeight[0]/SymmetricQuantizer[op]/symmetric_quantize" -> "72 MobileNetV2/Sequential[features]/InvertedResidual[6]/Sequential[conv]/ConvBNReLU[0]/NNCFConv2d[0]/conv2d";
"72 MobileNetV2/Sequential[features]/InvertedResidual[6]/Sequential[conv]/ConvBNReLU[0]/NNCFConv2d[0]/conv2d" -> "73 MobileNetV2/Sequential[features]/InvertedResidual[6]/Sequential[conv]/ConvBNReLU[0]/BatchNorm2d[1]/batch_norm";
"73 MobileNetV2/Sequential[features]/InvertedResidual[6]/Sequential[conv]/ConvBNReLU[0]/BatchNorm2d[1]/batch_norm" -> "74 MobileNetV2/Sequential[features]/InvertedResidual[6]/Sequential[conv]/ConvBNReLU[0]/ReLU6[2]/hardtanh";
"74 MobileNetV2/Sequential[features]/InvertedResidual[6]/Sequential[conv]/ConvBNReLU[0]/ReLU6[2]/hardtanh" -> "75 MobileNetV2/Sequential[features]/InvertedResidual[6]/Sequential[conv]/ConvBNReLU[0]/ReLU6[2]/SymmetricQuantizer/symmetric_quantize";
"75 MobileNetV2/Sequential[features]/InvertedResidual[6]/Sequential[conv]/ConvBNReLU[0]/ReLU6[2]/SymmetricQuantizer/symmetric_quantize" -> "77 MobileNetV2/Sequential[features]/InvertedResidual[6]/Sequential[conv]/ConvBNReLU[1]/NNCFConv2d[0]/conv2d";
"76 MobileNetV2/Sequential[features]/InvertedResidual[6]/Sequential[conv]/ConvBNReLU[1]/NNCFConv2d[0]/ModuleDict[pre_ops]/UpdateWeight[0]/SymmetricQuantizer[op]/symmetric_quantize" -> "77 MobileNetV2/Sequential[features]/InvertedResidual[6]/Sequential[conv]/ConvBNReLU[1]/NNCFConv2d[0]/conv2d";
"77 MobileNetV2/Sequential[features]/InvertedResidual[6]/Sequential[conv]/ConvBNReLU[1]/NNCFConv2d[0]/conv2d" -> "78 MobileNetV2/Sequential[features]/InvertedResidual[6]/Sequential[conv]/ConvBNReLU[1]/BatchNorm2d[1]/batch_norm";
"78 MobileNetV2/Sequential[features]/InvertedResidual[6]/Sequential[conv]/ConvBNReLU[1]/BatchNorm2d[1]/batch_norm" -> "79 MobileNetV2/Sequential[features]/InvertedResidual[6]/Sequential[conv]/ConvBNReLU[1]/ReLU6[2]/hardtanh";
"79 MobileNetV2/Sequential[features]/InvertedResidual[6]/Sequential[conv]/ConvBNReLU[1]/ReLU6[2]/hardtanh" -> "81 MobileNetV2/Sequential[features]/InvertedResidual[6]/Sequential[conv]/NNCFConv2d[2]/conv2d";
"80 MobileNetV2/Sequential[features]/InvertedResidual[6]/Sequential[conv]/NNCFConv2d[2]/ModuleDict[pre_ops]/UpdateWeight[0]/SymmetricQuantizer[op]/symmetric_quantize" -> "81 MobileNetV2/Sequential[features]/InvertedResidual[6]/Sequential[conv]/NNCFConv2d[2]/conv2d";
"81 MobileNetV2/Sequential[features]/InvertedResidual[6]/Sequential[conv]/NNCFConv2d[2]/conv2d" -> "82 MobileNetV2/Sequential[features]/InvertedResidual[6]/Sequential[conv]/BatchNorm2d[3]/batch_norm";
"82 MobileNetV2/Sequential[features]/InvertedResidual[6]/Sequential[conv]/BatchNorm2d[3]/batch_norm" -> "83 MobileNetV2/Sequential[features]/InvertedResidual[6]/Sequential[conv]/BatchNorm2d[3]/SymmetricQuantizer/symmetric_quantize";
"83 MobileNetV2/Sequential[features]/InvertedResidual[6]/Sequential[conv]/BatchNorm2d[3]/SymmetricQuantizer/symmetric_quantize" -> "84 MobileNetV2/Sequential[features]/InvertedResidual[6]/__add__";
"84 MobileNetV2/Sequential[features]/InvertedResidual[6]/__add__" -> "85 MobileNetV2/Sequential[features]/InvertedResidual[6]/SymmetricQuantizer/symmetric_quantize";
"85 MobileNetV2/Sequential[features]/InvertedResidual[6]/SymmetricQuantizer/symmetric_quantize" -> "87 MobileNetV2/Sequential[features]/InvertedResidual[7]/Sequential[conv]/ConvBNReLU[0]/NNCFConv2d[0]/conv2d";
"86 MobileNetV2/Sequential[features]/InvertedResidual[7]/Sequential[conv]/ConvBNReLU[0]/NNCFConv2d[0]/ModuleDict[pre_ops]/UpdateWeight[0]/SymmetricQuantizer[op]/symmetric_quantize" -> "87 MobileNetV2/Sequential[features]/InvertedResidual[7]/Sequential[conv]/ConvBNReLU[0]/NNCFConv2d[0]/conv2d";
"87 MobileNetV2/Sequential[features]/InvertedResidual[7]/Sequential[conv]/ConvBNReLU[0]/NNCFConv2d[0]/conv2d" -> "88 MobileNetV2/Sequential[features]/InvertedResidual[7]/Sequential[conv]/ConvBNReLU[0]/BatchNorm2d[1]/batch_norm";
"88 MobileNetV2/Sequential[features]/InvertedResidual[7]/Sequential[conv]/ConvBNReLU[0]/BatchNorm2d[1]/batch_norm" -> "89 MobileNetV2/Sequential[features]/InvertedResidual[7]/Sequential[conv]/ConvBNReLU[0]/ReLU6[2]/hardtanh";
"89 MobileNetV2/Sequential[features]/InvertedResidual[7]/Sequential[conv]/ConvBNReLU[0]/ReLU6[2]/hardtanh" -> "90 MobileNetV2/Sequential[features]/InvertedResidual[7]/Sequential[conv]/ConvBNReLU[0]/ReLU6[2]/SymmetricQuantizer/symmetric_quantize";
"90 MobileNetV2/Sequential[features]/InvertedResidual[7]/Sequential[conv]/ConvBNReLU[0]/ReLU6[2]/SymmetricQuantizer/symmetric_quantize" -> "92 MobileNetV2/Sequential[features]/InvertedResidual[7]/Sequential[conv]/ConvBNReLU[1]/NNCFConv2d[0]/conv2d";
"91 MobileNetV2/Sequential[features]/InvertedResidual[7]/Sequential[conv]/ConvBNReLU[1]/NNCFConv2d[0]/ModuleDict[pre_ops]/UpdateWeight[0]/SymmetricQuantizer[op]/symmetric_quantize" -> "92 MobileNetV2/Sequential[features]/InvertedResidual[7]/Sequential[conv]/ConvBNReLU[1]/NNCFConv2d[0]/conv2d";
"92 MobileNetV2/Sequential[features]/InvertedResidual[7]/Sequential[conv]/ConvBNReLU[1]/NNCFConv2d[0]/conv2d" -> "93 MobileNetV2/Sequential[features]/InvertedResidual[7]/Sequential[conv]/ConvBNReLU[1]/BatchNorm2d[1]/batch_norm";
"93 MobileNetV2/Sequential[features]/InvertedResidual[7]/Sequential[conv]/ConvBNReLU[1]/BatchNorm2d[1]/batch_norm" -> "94 MobileNetV2/Sequential[features]/InvertedResidual[7]/Sequential[conv]/ConvBNReLU[1]/ReLU6[2]/hardtanh";
"94 MobileNetV2/Sequential[features]/InvertedResidual[7]/Sequential[conv]/ConvBNReLU[1]/ReLU6[2]/hardtanh" -> "96 MobileNetV2/Sequential[features]/InvertedResidual[7]/Sequential[conv]/NNCFConv2d[2]/conv2d";
"95 MobileNetV2/Sequential[features]/InvertedResidual[7]/Sequential[conv]/NNCFConv2d[2]/ModuleDict[pre_ops]/UpdateWeight[0]/SymmetricQuantizer[op]/symmetric_quantize" -> "96 MobileNetV2/Sequential[features]/InvertedResidual[7]/Sequential[conv]/NNCFConv2d[2]/conv2d";
"96 MobileNetV2/Sequential[features]/InvertedResidual[7]/Sequential[conv]/NNCFConv2d[2]/conv2d" -> "97 MobileNetV2/Sequential[features]/InvertedResidual[7]/Sequential[conv]/BatchNorm2d[3]/batch_norm";
"97 MobileNetV2/Sequential[features]/InvertedResidual[7]/Sequential[conv]/BatchNorm2d[3]/batch_norm" -> "98 MobileNetV2/Sequential[features]/InvertedResidual[7]/Sequential[conv]/BatchNorm2d[3]/SymmetricQuantizer/symmetric_quantize";
"98 MobileNetV2/Sequential[features]/InvertedResidual[7]/Sequential[conv]/BatchNorm2d[3]/SymmetricQuantizer/symmetric_quantize" -> "100 MobileNetV2/Sequential[features]/InvertedResidual[8]/Sequential[conv]/ConvBNReLU[0]/NNCFConv2d[0]/conv2d";
"98 MobileNetV2/Sequential[features]/InvertedResidual[7]/Sequential[conv]/BatchNorm2d[3]/SymmetricQuantizer/symmetric_quantize" -> "112 MobileNetV2/Sequential[features]/InvertedResidual[8]/__add__";
"99 MobileNetV2/Sequential[features]/InvertedResidual[8]/Sequential[conv]/ConvBNReLU[0]/NNCFConv2d[0]/ModuleDict[pre_ops]/UpdateWeight[0]/SymmetricQuantizer[op]/symmetric_quantize" -> "100 MobileNetV2/Sequential[features]/InvertedResidual[8]/Sequential[conv]/ConvBNReLU[0]/NNCFConv2d[0]/conv2d";
"100 MobileNetV2/Sequential[features]/InvertedResidual[8]/Sequential[conv]/ConvBNReLU[0]/NNCFConv2d[0]/conv2d" -> "101 MobileNetV2/Sequential[features]/InvertedResidual[8]/Sequential[conv]/ConvBNReLU[0]/BatchNorm2d[1]/batch_norm";
"101 MobileNetV2/Sequential[features]/InvertedResidual[8]/Sequential[conv]/ConvBNReLU[0]/BatchNorm2d[1]/batch_norm" -> "102 MobileNetV2/Sequential[features]/InvertedResidual[8]/Sequential[conv]/ConvBNReLU[0]/ReLU6[2]/hardtanh";
"102 MobileNetV2/Sequential[features]/InvertedResidual[8]/Sequential[conv]/ConvBNReLU[0]/ReLU6[2]/hardtanh" -> "103 MobileNetV2/Sequential[features]/InvertedResidual[8]/Sequential[conv]/ConvBNReLU[0]/ReLU6[2]/SymmetricQuantizer/symmetric_quantize";
"103 MobileNetV2/Sequential[features]/InvertedResidual[8]/Sequential[conv]/ConvBNReLU[0]/ReLU6[2]/SymmetricQuantizer/symmetric_quantize" -> "105 MobileNetV2/Sequential[features]/InvertedResidual[8]/Sequential[conv]/ConvBNReLU[1]/NNCFConv2d[0]/conv2d";
"104 MobileNetV2/Sequential[features]/InvertedResidual[8]/Sequential[conv]/ConvBNReLU[1]/NNCFConv2d[0]/ModuleDict[pre_ops]/UpdateWeight[0]/SymmetricQuantizer[op]/symmetric_quantize" -> "105 MobileNetV2/Sequential[features]/InvertedResidual[8]/Sequential[conv]/ConvBNReLU[1]/NNCFConv2d[0]/conv2d";
"105 MobileNetV2/Sequential[features]/InvertedResidual[8]/Sequential[conv]/ConvBNReLU[1]/NNCFConv2d[0]/conv2d" -> "106 MobileNetV2/Sequential[features]/InvertedResidual[8]/Sequential[conv]/ConvBNReLU[1]/BatchNorm2d[1]/batch_norm";
"106 MobileNetV2/Sequential[features]/InvertedResidual[8]/Sequential[conv]/ConvBNReLU[1]/BatchNorm2d[1]/batch_norm" -> "107 MobileNetV2/Sequential[features]/InvertedResidual[8]/Sequential[conv]/ConvBNReLU[1]/ReLU6[2]/hardtanh";
"107 MobileNetV2/Sequential[features]/InvertedResidual[8]/Sequential[conv]/ConvBNReLU[1]/ReLU6[2]/hardtanh" -> "109 MobileNetV2/Sequential[features]/InvertedResidual[8]/Sequential[conv]/NNCFConv2d[2]/conv2d";
"108 MobileNetV2/Sequential[features]/InvertedResidual[8]/Sequential[conv]/NNCFConv2d[2]/ModuleDict[pre_ops]/UpdateWeight[0]/SymmetricQuantizer[op]/symmetric_quantize" -> "109 MobileNetV2/Sequential[features]/InvertedResidual[8]/Sequential[conv]/NNCFConv2d[2]/conv2d";
"109 MobileNetV2/Sequential[features]/InvertedResidual[8]/Sequential[conv]/NNCFConv2d[2]/conv2d" -> "110 MobileNetV2/Sequential[features]/InvertedResidual[8]/Sequential[conv]/BatchNorm2d[3]/batch_norm";
"110 MobileNetV2/Sequential[features]/InvertedResidual[8]/Sequential[conv]/BatchNorm2d[3]/batch_norm" -> "111 MobileNetV2/Sequential[features]/InvertedResidual[8]/Sequential[conv]/BatchNorm2d[3]/SymmetricQuantizer/symmetric_quantize";
"111 MobileNetV2/Sequential[features]/InvertedResidual[8]/Sequential[conv]/BatchNorm2d[3]/SymmetricQuantizer/symmetric_quantize" -> "112 MobileNetV2/Sequential[features]/InvertedResidual[8]/__add__";
"112 MobileNetV2/Sequential[features]/InvertedResidual[8]/__add__" -> "113 MobileNetV2/Sequential[features]/InvertedResidual[8]/SymmetricQuantizer/symmetric_quantize";
"113 MobileNetV2/Sequential[features]/InvertedResidual[8]/SymmetricQuantizer/symmetric_quantize" -> "115 MobileNetV2/Sequential[features]/InvertedResidual[9]/Sequential[conv]/ConvBNReLU[0]/NNCFConv2d[0]/conv2d";
"113 MobileNetV2/Sequential[features]/InvertedResidual[8]/SymmetricQuantizer/symmetric_quantize" -> "127 MobileNetV2/Sequential[features]/InvertedResidual[9]/__add__";
"114 MobileNetV2/Sequential[features]/InvertedResidual[9]/Sequential[conv]/ConvBNReLU[0]/NNCFConv2d[0]/ModuleDict[pre_ops]/UpdateWeight[0]/SymmetricQuantizer[op]/symmetric_quantize" -> "115 MobileNetV2/Sequential[features]/InvertedResidual[9]/Sequential[conv]/ConvBNReLU[0]/NNCFConv2d[0]/conv2d";
"115 MobileNetV2/Sequential[features]/InvertedResidual[9]/Sequential[conv]/ConvBNReLU[0]/NNCFConv2d[0]/conv2d" -> "116 MobileNetV2/Sequential[features]/InvertedResidual[9]/Sequential[conv]/ConvBNReLU[0]/BatchNorm2d[1]/batch_norm";
"116 MobileNetV2/Sequential[features]/InvertedResidual[9]/Sequential[conv]/ConvBNReLU[0]/BatchNorm2d[1]/batch_norm" -> "117 MobileNetV2/Sequential[features]/InvertedResidual[9]/Sequential[conv]/ConvBNReLU[0]/ReLU6[2]/hardtanh";
"117 MobileNetV2/Sequential[features]/InvertedResidual[9]/Sequential[conv]/ConvBNReLU[0]/ReLU6[2]/hardtanh" -> "118 MobileNetV2/Sequential[features]/InvertedResidual[9]/Sequential[conv]/ConvBNReLU[0]/ReLU6[2]/SymmetricQuantizer/symmetric_quantize";
"118 MobileNetV2/Sequential[features]/InvertedResidual[9]/Sequential[conv]/ConvBNReLU[0]/ReLU6[2]/SymmetricQuantizer/symmetric_quantize" -> "120 MobileNetV2/Sequential[features]/InvertedResidual[9]/Sequential[conv]/ConvBNReLU[1]/NNCFConv2d[0]/conv2d";
"119 MobileNetV2/Sequential[features]/InvertedResidual[9]/Sequential[conv]/ConvBNReLU[1]/NNCFConv2d[0]/ModuleDict[pre_ops]/UpdateWeight[0]/SymmetricQuantizer[op]/symmetric_quantize" -> "120 MobileNetV2/Sequential[features]/InvertedResidual[9]/Sequential[conv]/ConvBNReLU[1]/NNCFConv2d[0]/conv2d";
"120 MobileNetV2/Sequential[features]/InvertedResidual[9]/Sequential[conv]/ConvBNReLU[1]/NNCFConv2d[0]/conv2d" -> "121 MobileNetV2/Sequential[features]/InvertedResidual[9]/Sequential[conv]/ConvBNReLU[1]/BatchNorm2d[1]/batch_norm";
"121 MobileNetV2/Sequential[features]/InvertedResidual[9]/Sequential[conv]/ConvBNReLU[1]/BatchNorm2d[1]/batch_norm" -> "122 MobileNetV2/Sequential[features]/InvertedResidual[9]/Sequential[conv]/ConvBNReLU[1]/ReLU6[2]/hardtanh";
"122 MobileNetV2/Sequential[features]/InvertedResidual[9]/Sequential[conv]/ConvBNReLU[1]/ReLU6[2]/hardtanh" -> "124 MobileNetV2/Sequential[features]/InvertedResidual[9]/Sequential[conv]/NNCFConv2d[2]/conv2d";
"123 MobileNetV2/Sequential[features]/InvertedResidual[9]/Sequential[conv]/NNCFConv2d[2]/ModuleDict[pre_ops]/UpdateWeight[0]/SymmetricQuantizer[op]/symmetric_quantize" -> "124 MobileNetV2/Sequential[features]/InvertedResidual[9]/Sequential[conv]/NNCFConv2d[2]/conv2d";
"124 MobileNetV2/Sequential[features]/InvertedResidual[9]/Sequential[conv]/NNCFConv2d[2]/conv2d" -> "125 MobileNetV2/Sequential[features]/InvertedResidual[9]/Sequential[conv]/BatchNorm2d[3]/batch_norm";
"125 MobileNetV2/Sequential[features]/InvertedResidual[9]/Sequential[conv]/BatchNorm2d[3]/batch_norm" -> "126 MobileNetV2/Sequential[features]/InvertedResidual[9]/Sequential[conv]/BatchNorm2d[3]/SymmetricQuantizer/symmetric_quantize";
"126 MobileNetV2/Sequential[features]/InvertedResidual[9]/Sequential[conv]/BatchNorm2d[3]/SymmetricQuantizer/symmetric_quantize" -> "127 MobileNetV2/Sequential[features]/InvertedResidual[9]/__add__";
"127 MobileNetV2/Sequential[features]/InvertedResidual[9]/__add__" -> "128 MobileNetV2/Sequential[features]/InvertedResidual[9]/SymmetricQuantizer/symmetric_quantize";
"128 MobileNetV2/Sequential[features]/InvertedResidual[9]/SymmetricQuantizer/symmetric_quantize" -> "130 MobileNetV2/Sequential[features]/InvertedResidual[10]/Sequential[conv]/ConvBNReLU[0]/NNCFConv2d[0]/conv2d";
"128 MobileNetV2/Sequential[features]/InvertedResidual[9]/SymmetricQuantizer/symmetric_quantize" -> "142 MobileNetV2/Sequential[features]/InvertedResidual[10]/__add__";
"129 MobileNetV2/Sequential[features]/InvertedResidual[10]/Sequential[conv]/ConvBNReLU[0]/NNCFConv2d[0]/ModuleDict[pre_ops]/UpdateWeight[0]/SymmetricQuantizer[op]/symmetric_quantize" -> "130 MobileNetV2/Sequential[features]/InvertedResidual[10]/Sequential[conv]/ConvBNReLU[0]/NNCFConv2d[0]/conv2d";
"130 MobileNetV2/Sequential[features]/InvertedResidual[10]/Sequential[conv]/ConvBNReLU[0]/NNCFConv2d[0]/conv2d" -> "131 MobileNetV2/Sequential[features]/InvertedResidual[10]/Sequential[conv]/ConvBNReLU[0]/BatchNorm2d[1]/batch_norm";
"131 MobileNetV2/Sequential[features]/InvertedResidual[10]/Sequential[conv]/ConvBNReLU[0]/BatchNorm2d[1]/batch_norm" -> "132 MobileNetV2/Sequential[features]/InvertedResidual[10]/Sequential[conv]/ConvBNReLU[0]/ReLU6[2]/hardtanh";
"132 MobileNetV2/Sequential[features]/InvertedResidual[10]/Sequential[conv]/ConvBNReLU[0]/ReLU6[2]/hardtanh" -> "133 MobileNetV2/Sequential[features]/InvertedResidual[10]/Sequential[conv]/ConvBNReLU[0]/ReLU6[2]/SymmetricQuantizer/symmetric_quantize";
"133 MobileNetV2/Sequential[features]/InvertedResidual[10]/Sequential[conv]/ConvBNReLU[0]/ReLU6[2]/SymmetricQuantizer/symmetric_quantize" -> "135 MobileNetV2/Sequential[features]/InvertedResidual[10]/Sequential[conv]/ConvBNReLU[1]/NNCFConv2d[0]/conv2d";
"134 MobileNetV2/Sequential[features]/InvertedResidual[10]/Sequential[conv]/ConvBNReLU[1]/NNCFConv2d[0]/ModuleDict[pre_ops]/UpdateWeight[0]/SymmetricQuantizer[op]/symmetric_quantize" -> "135 MobileNetV2/Sequential[features]/InvertedResidual[10]/Sequential[conv]/ConvBNReLU[1]/NNCFConv2d[0]/conv2d";
"135 MobileNetV2/Sequential[features]/InvertedResidual[10]/Sequential[conv]/ConvBNReLU[1]/NNCFConv2d[0]/conv2d" -> "136 MobileNetV2/Sequential[features]/InvertedResidual[10]/Sequential[conv]/ConvBNReLU[1]/BatchNorm2d[1]/batch_norm";
"136 MobileNetV2/Sequential[features]/InvertedResidual[10]/Sequential[conv]/ConvBNReLU[1]/BatchNorm2d[1]/batch_norm" -> "137 MobileNetV2/Sequential[features]/InvertedResidual[10]/Sequential[conv]/ConvBNReLU[1]/ReLU6[2]/hardtanh";
"137 MobileNetV2/Sequential[features]/InvertedResidual[10]/Sequential[conv]/ConvBNReLU[1]/ReLU6[2]/hardtanh" -> "139 MobileNetV2/Sequential[features]/InvertedResidual[10]/Sequential[conv]/NNCFConv2d[2]/conv2d";
"138 MobileNetV2/Sequential[features]/InvertedResidual[10]/Sequential[conv]/NNCFConv2d[2]/ModuleDict[pre_ops]/UpdateWeight[0]/SymmetricQuantizer[op]/symmetric_quantize" -> "139 MobileNetV2/Sequential[features]/InvertedResidual[10]/Sequential[conv]/NNCFConv2d[2]/conv2d";
"139 MobileNetV2/Sequential[features]/InvertedResidual[10]/Sequential[conv]/NNCFConv2d[2]/conv2d" -> "140 MobileNetV2/Sequential[features]/InvertedResidual[10]/Sequential[conv]/BatchNorm2d[3]/batch_norm";
"140 MobileNetV2/Sequential[features]/InvertedResidual[10]/Sequential[conv]/BatchNorm2d[3]/batch_norm" -> "141 MobileNetV2/Sequential[features]/InvertedResidual[10]/Sequential[conv]/BatchNorm2d[3]/SymmetricQuantizer/symmetric_quantize";
"141 MobileNetV2/Sequential[features]/InvertedResidual[10]/Sequential[conv]/BatchNorm2d[3]/SymmetricQuantizer/symmetric_quantize" -> "142 MobileNetV2/Sequential[features]/InvertedResidual[10]/__add__";
"142 MobileNetV2/Sequential[features]/InvertedResidual[10]/__add__" -> "143 MobileNetV2/Sequential[features]/InvertedResidual[10]/SymmetricQuantizer/symmetric_quantize";
"143 MobileNetV2/Sequential[features]/InvertedResidual[10]/SymmetricQuantizer/symmetric_quantize" -> "145 MobileNetV2/Sequential[features]/InvertedResidual[11]/Sequential[conv]/ConvBNReLU[0]/NNCFConv2d[0]/conv2d";
"144 MobileNetV2/Sequential[features]/InvertedResidual[11]/Sequential[conv]/ConvBNReLU[0]/NNCFConv2d[0]/ModuleDict[pre_ops]/UpdateWeight[0]/SymmetricQuantizer[op]/symmetric_quantize" -> "145 MobileNetV2/Sequential[features]/InvertedResidual[11]/Sequential[conv]/ConvBNReLU[0]/NNCFConv2d[0]/conv2d";
"145 MobileNetV2/Sequential[features]/InvertedResidual[11]/Sequential[conv]/ConvBNReLU[0]/NNCFConv2d[0]/conv2d" -> "146 MobileNetV2/Sequential[features]/InvertedResidual[11]/Sequential[conv]/ConvBNReLU[0]/BatchNorm2d[1]/batch_norm";
"146 MobileNetV2/Sequential[features]/InvertedResidual[11]/Sequential[conv]/ConvBNReLU[0]/BatchNorm2d[1]/batch_norm" -> "147 MobileNetV2/Sequential[features]/InvertedResidual[11]/Sequential[conv]/ConvBNReLU[0]/ReLU6[2]/hardtanh";
"147 MobileNetV2/Sequential[features]/InvertedResidual[11]/Sequential[conv]/ConvBNReLU[0]/ReLU6[2]/hardtanh" -> "148 MobileNetV2/Sequential[features]/InvertedResidual[11]/Sequential[conv]/ConvBNReLU[0]/ReLU6[2]/SymmetricQuantizer/symmetric_quantize";
"148 MobileNetV2/Sequential[features]/InvertedResidual[11]/Sequential[conv]/ConvBNReLU[0]/ReLU6[2]/SymmetricQuantizer/symmetric_quantize" -> "150 MobileNetV2/Sequential[features]/InvertedResidual[11]/Sequential[conv]/ConvBNReLU[1]/NNCFConv2d[0]/conv2d";
"149 MobileNetV2/Sequential[features]/InvertedResidual[11]/Sequential[conv]/ConvBNReLU[1]/NNCFConv2d[0]/ModuleDict[pre_ops]/UpdateWeight[0]/SymmetricQuantizer[op]/symmetric_quantize" -> "150 MobileNetV2/Sequential[features]/InvertedResidual[11]/Sequential[conv]/ConvBNReLU[1]/NNCFConv2d[0]/conv2d";
"150 MobileNetV2/Sequential[features]/InvertedResidual[11]/Sequential[conv]/ConvBNReLU[1]/NNCFConv2d[0]/conv2d" -> "151 MobileNetV2/Sequential[features]/InvertedResidual[11]/Sequential[conv]/ConvBNReLU[1]/BatchNorm2d[1]/batch_norm";
"151 MobileNetV2/Sequential[features]/InvertedResidual[11]/Sequential[conv]/ConvBNReLU[1]/BatchNorm2d[1]/batch_norm" -> "152 MobileNetV2/Sequential[features]/InvertedResidual[11]/Sequential[conv]/ConvBNReLU[1]/ReLU6[2]/hardtanh";
"152 MobileNetV2/Sequential[features]/InvertedResidual[11]/Sequential[conv]/ConvBNReLU[1]/ReLU6[2]/hardtanh" -> "154 MobileNetV2/Sequential[features]/InvertedResidual[11]/Sequential[conv]/NNCFConv2d[2]/conv2d";
"153 MobileNetV2/Sequential[features]/InvertedResidual[11]/Sequential[conv]/NNCFConv2d[2]/ModuleDict[pre_ops]/UpdateWeight[0]/SymmetricQuantizer[op]/symmetric_quantize" -> "154 MobileNetV2/Sequential[features]/InvertedResidual[11]/Sequential[conv]/NNCFConv2d[2]/conv2d";
"154 MobileNetV2/Sequential[features]/InvertedResidual[11]/Sequential[conv]/NNCFConv2d[2]/conv2d" -> "155 MobileNetV2/Sequential[features]/InvertedResidual[11]/Sequential[conv]/BatchNorm2d[3]/batch_norm";
"155 MobileNetV2/Sequential[features]/InvertedResidual[11]/Sequential[conv]/BatchNorm2d[3]/batch_norm" -> "156 MobileNetV2/Sequential[features]/InvertedResidual[11]/Sequential[conv]/BatchNorm2d[3]/SymmetricQuantizer/symmetric_quantize";
"156 MobileNetV2/Sequential[features]/InvertedResidual[11]/Sequential[conv]/BatchNorm2d[3]/SymmetricQuantizer/symmetric_quantize" -> "158 MobileNetV2/Sequential[features]/InvertedResidual[12]/Sequential[conv]/ConvBNReLU[0]/NNCFConv2d[0]/conv2d";
"156 MobileNetV2/Sequential[features]/InvertedResidual[11]/Sequential[conv]/BatchNorm2d[3]/SymmetricQuantizer/symmetric_quantize" -> "170 MobileNetV2/Sequential[features]/InvertedResidual[12]/__add__";
"157 MobileNetV2/Sequential[features]/InvertedResidual[12]/Sequential[conv]/ConvBNReLU[0]/NNCFConv2d[0]/ModuleDict[pre_ops]/UpdateWeight[0]/SymmetricQuantizer[op]/symmetric_quantize" -> "158 MobileNetV2/Sequential[features]/InvertedResidual[12]/Sequential[conv]/ConvBNReLU[0]/NNCFConv2d[0]/conv2d";
"158 MobileNetV2/Sequential[features]/InvertedResidual[12]/Sequential[conv]/ConvBNReLU[0]/NNCFConv2d[0]/conv2d" -> "159 MobileNetV2/Sequential[features]/InvertedResidual[12]/Sequential[conv]/ConvBNReLU[0]/BatchNorm2d[1]/batch_norm";
"159 MobileNetV2/Sequential[features]/InvertedResidual[12]/Sequential[conv]/ConvBNReLU[0]/BatchNorm2d[1]/batch_norm" -> "160 MobileNetV2/Sequential[features]/InvertedResidual[12]/Sequential[conv]/ConvBNReLU[0]/ReLU6[2]/hardtanh";
"160 MobileNetV2/Sequential[features]/InvertedResidual[12]/Sequential[conv]/ConvBNReLU[0]/ReLU6[2]/hardtanh" -> "161 MobileNetV2/Sequential[features]/InvertedResidual[12]/Sequential[conv]/ConvBNReLU[0]/ReLU6[2]/SymmetricQuantizer/symmetric_quantize";
"161 MobileNetV2/Sequential[features]/InvertedResidual[12]/Sequential[conv]/ConvBNReLU[0]/ReLU6[2]/SymmetricQuantizer/symmetric_quantize" -> "163 MobileNetV2/Sequential[features]/InvertedResidual[12]/Sequential[conv]/ConvBNReLU[1]/NNCFConv2d[0]/conv2d";
"162 MobileNetV2/Sequential[features]/InvertedResidual[12]/Sequential[conv]/ConvBNReLU[1]/NNCFConv2d[0]/ModuleDict[pre_ops]/UpdateWeight[0]/SymmetricQuantizer[op]/symmetric_quantize" -> "163 MobileNetV2/Sequential[features]/InvertedResidual[12]/Sequential[conv]/ConvBNReLU[1]/NNCFConv2d[0]/conv2d";
"163 MobileNetV2/Sequential[features]/InvertedResidual[12]/Sequential[conv]/ConvBNReLU[1]/NNCFConv2d[0]/conv2d" -> "164 MobileNetV2/Sequential[features]/InvertedResidual[12]/Sequential[conv]/ConvBNReLU[1]/BatchNorm2d[1]/batch_norm";
"164 MobileNetV2/Sequential[features]/InvertedResidual[12]/Sequential[conv]/ConvBNReLU[1]/BatchNorm2d[1]/batch_norm" -> "165 MobileNetV2/Sequential[features]/InvertedResidual[12]/Sequential[conv]/ConvBNReLU[1]/ReLU6[2]/hardtanh";
"165 MobileNetV2/Sequential[features]/InvertedResidual[12]/Sequential[conv]/ConvBNReLU[1]/ReLU6[2]/hardtanh" -> "167 MobileNetV2/Sequential[features]/InvertedResidual[12]/Sequential[conv]/NNCFConv2d[2]/conv2d";
"166 MobileNetV2/Sequential[features]/InvertedResidual[12]/Sequential[conv]/NNCFConv2d[2]/ModuleDict[pre_ops]/UpdateWeight[0]/SymmetricQuantizer[op]/symmetric_quantize" -> "167 MobileNetV2/Sequential[features]/InvertedResidual[12]/Sequential[conv]/NNCFConv2d[2]/conv2d";
"167 MobileNetV2/Sequential[features]/InvertedResidual[12]/Sequential[conv]/NNCFConv2d[2]/conv2d" -> "168 MobileNetV2/Sequential[features]/InvertedResidual[12]/Sequential[conv]/BatchNorm2d[3]/batch_norm";
"168 MobileNetV2/Sequential[features]/InvertedResidual[12]/Sequential[conv]/BatchNorm2d[3]/batch_norm" -> "169 MobileNetV2/Sequential[features]/InvertedResidual[12]/Sequential[conv]/BatchNorm2d[3]/SymmetricQuantizer/symmetric_quantize";
"169 MobileNetV2/Sequential[features]/InvertedResidual[12]/Sequential[conv]/BatchNorm2d[3]/SymmetricQuantizer/symmetric_quantize" -> "170 MobileNetV2/Sequential[features]/InvertedResidual[12]/__add__";
"170 MobileNetV2/Sequential[features]/InvertedResidual[12]/__add__" -> "171 MobileNetV2/Sequential[features]/InvertedResidual[12]/SymmetricQuantizer/symmetric_quantize";
"171 MobileNetV2/Sequential[features]/InvertedResidual[12]/SymmetricQuantizer/symmetric_quantize" -> "173 MobileNetV2/Sequential[features]/InvertedResidual[13]/Sequential[conv]/ConvBNReLU[0]/NNCFConv2d[0]/conv2d";
"171 MobileNetV2/Sequential[features]/InvertedResidual[12]/SymmetricQuantizer/symmetric_quantize" -> "185 MobileNetV2/Sequential[features]/InvertedResidual[13]/__add__";
"172 MobileNetV2/Sequential[features]/InvertedResidual[13]/Sequential[conv]/ConvBNReLU[0]/NNCFConv2d[0]/ModuleDict[pre_ops]/UpdateWeight[0]/SymmetricQuantizer[op]/symmetric_quantize" -> "173 MobileNetV2/Sequential[features]/InvertedResidual[13]/Sequential[conv]/ConvBNReLU[0]/NNCFConv2d[0]/conv2d";
"173 MobileNetV2/Sequential[features]/InvertedResidual[13]/Sequential[conv]/ConvBNReLU[0]/NNCFConv2d[0]/conv2d" -> "174 MobileNetV2/Sequential[features]/InvertedResidual[13]/Sequential[conv]/ConvBNReLU[0]/BatchNorm2d[1]/batch_norm";
"174 MobileNetV2/Sequential[features]/InvertedResidual[13]/Sequential[conv]/ConvBNReLU[0]/BatchNorm2d[1]/batch_norm" -> "175 MobileNetV2/Sequential[features]/InvertedResidual[13]/Sequential[conv]/ConvBNReLU[0]/ReLU6[2]/hardtanh";
"175 MobileNetV2/Sequential[features]/InvertedResidual[13]/Sequential[conv]/ConvBNReLU[0]/ReLU6[2]/hardtanh" -> "176 MobileNetV2/Sequential[features]/InvertedResidual[13]/Sequential[conv]/ConvBNReLU[0]/ReLU6[2]/SymmetricQuantizer/symmetric_quantize";
"176 MobileNetV2/Sequential[features]/InvertedResidual[13]/Sequential[conv]/ConvBNReLU[0]/ReLU6[2]/SymmetricQuantizer/symmetric_quantize" -> "178 MobileNetV2/Sequential[features]/InvertedResidual[13]/Sequential[conv]/ConvBNReLU[1]/NNCFConv2d[0]/conv2d";
"177 MobileNetV2/Sequential[features]/InvertedResidual[13]/Sequential[conv]/ConvBNReLU[1]/NNCFConv2d[0]/ModuleDict[pre_ops]/UpdateWeight[0]/SymmetricQuantizer[op]/symmetric_quantize" -> "178 MobileNetV2/Sequential[features]/InvertedResidual[13]/Sequential[conv]/ConvBNReLU[1]/NNCFConv2d[0]/conv2d";
"178 MobileNetV2/Sequential[features]/InvertedResidual[13]/Sequential[conv]/ConvBNReLU[1]/NNCFConv2d[0]/conv2d" -> "179 MobileNetV2/Sequential[features]/InvertedResidual[13]/Sequential[conv]/ConvBNReLU[1]/BatchNorm2d[1]/batch_norm";
"179 MobileNetV2/Sequential[features]/InvertedResidual[13]/Sequential[conv]/ConvBNReLU[1]/BatchNorm2d[1]/batch_norm" -> "180 MobileNetV2/Sequential[features]/InvertedResidual[13]/Sequential[conv]/ConvBNReLU[1]/ReLU6[2]/hardtanh";
"180 MobileNetV2/Sequential[features]/InvertedResidual[13]/Sequential[conv]/ConvBNReLU[1]/ReLU6[2]/hardtanh" -> "182 MobileNetV2/Sequential[features]/InvertedResidual[13]/Sequential[conv]/NNCFConv2d[2]/conv2d";
"181 MobileNetV2/Sequential[features]/InvertedResidual[13]/Sequential[conv]/NNCFConv2d[2]/ModuleDict[pre_ops]/UpdateWeight[0]/SymmetricQuantizer[op]/symmetric_quantize" -> "182 MobileNetV2/Sequential[features]/InvertedResidual[13]/Sequential[conv]/NNCFConv2d[2]/conv2d";
"182 MobileNetV2/Sequential[features]/InvertedResidual[13]/Sequential[conv]/NNCFConv2d[2]/conv2d" -> "183 MobileNetV2/Sequential[features]/InvertedResidual[13]/Sequential[conv]/BatchNorm2d[3]/batch_norm";
"183 MobileNetV2/Sequential[features]/InvertedResidual[13]/Sequential[conv]/BatchNorm2d[3]/batch_norm" -> "184 MobileNetV2/Sequential[features]/InvertedResidual[13]/Sequential[conv]/BatchNorm2d[3]/SymmetricQuantizer/symmetric_quantize";
"184 MobileNetV2/Sequential[features]/InvertedResidual[13]/Sequential[conv]/BatchNorm2d[3]/SymmetricQuantizer/symmetric_quantize" -> "185 MobileNetV2/Sequential[features]/InvertedResidual[13]/__add__";
"185 MobileNetV2/Sequential[features]/InvertedResidual[13]/__add__" -> "186 MobileNetV2/Sequential[features]/InvertedResidual[13]/SymmetricQuantizer/symmetric_quantize";
"186 MobileNetV2/Sequential[features]/InvertedResidual[13]/SymmetricQuantizer/symmetric_quantize" -> "188 MobileNetV2/Sequential[features]/InvertedResidual[14]/Sequential[conv]/ConvBNReLU[0]/NNCFConv2d[0]/conv2d";
"187 MobileNetV2/Sequential[features]/InvertedResidual[14]/Sequential[conv]/ConvBNReLU[0]/NNCFConv2d[0]/ModuleDict[pre_ops]/UpdateWeight[0]/SymmetricQuantizer[op]/symmetric_quantize" -> "188 MobileNetV2/Sequential[features]/InvertedResidual[14]/Sequential[conv]/ConvBNReLU[0]/NNCFConv2d[0]/conv2d";
"188 MobileNetV2/Sequential[features]/InvertedResidual[14]/Sequential[conv]/ConvBNReLU[0]/NNCFConv2d[0]/conv2d" -> "189 MobileNetV2/Sequential[features]/InvertedResidual[14]/Sequential[conv]/ConvBNReLU[0]/BatchNorm2d[1]/batch_norm";
"189 MobileNetV2/Sequential[features]/InvertedResidual[14]/Sequential[conv]/ConvBNReLU[0]/BatchNorm2d[1]/batch_norm" -> "190 MobileNetV2/Sequential[features]/InvertedResidual[14]/Sequential[conv]/ConvBNReLU[0]/ReLU6[2]/hardtanh";
"190 MobileNetV2/Sequential[features]/InvertedResidual[14]/Sequential[conv]/ConvBNReLU[0]/ReLU6[2]/hardtanh" -> "191 MobileNetV2/Sequential[features]/InvertedResidual[14]/Sequential[conv]/ConvBNReLU[0]/ReLU6[2]/SymmetricQuantizer/symmetric_quantize";
"191 MobileNetV2/Sequential[features]/InvertedResidual[14]/Sequential[conv]/ConvBNReLU[0]/ReLU6[2]/SymmetricQuantizer/symmetric_quantize" -> "193 MobileNetV2/Sequential[features]/InvertedResidual[14]/Sequential[conv]/ConvBNReLU[1]/NNCFConv2d[0]/conv2d";
"192 MobileNetV2/Sequential[features]/InvertedResidual[14]/Sequential[conv]/ConvBNReLU[1]/NNCFConv2d[0]/ModuleDict[pre_ops]/UpdateWeight[0]/SymmetricQuantizer[op]/symmetric_quantize" -> "193 MobileNetV2/Sequential[features]/InvertedResidual[14]/Sequential[conv]/ConvBNReLU[1]/NNCFConv2d[0]/conv2d";
"193 MobileNetV2/Sequential[features]/InvertedResidual[14]/Sequential[conv]/ConvBNReLU[1]/NNCFConv2d[0]/conv2d" -> "194 MobileNetV2/Sequential[features]/InvertedResidual[14]/Sequential[conv]/ConvBNReLU[1]/BatchNorm2d[1]/batch_norm";
"194 MobileNetV2/Sequential[features]/InvertedResidual[14]/Sequential[conv]/ConvBNReLU[1]/BatchNorm2d[1]/batch_norm" -> "195 MobileNetV2/Sequential[features]/InvertedResidual[14]/Sequential[conv]/ConvBNReLU[1]/ReLU6[2]/hardtanh";
"195 MobileNetV2/Sequential[features]/InvertedResidual[14]/Sequential[conv]/ConvBNReLU[1]/ReLU6[2]/hardtanh" -> "197 MobileNetV2/Sequential[features]/InvertedResidual[14]/Sequential[conv]/NNCFConv2d[2]/conv2d";
"196 MobileNetV2/Sequential[features]/InvertedResidual[14]/Sequential[conv]/NNCFConv2d[2]/ModuleDict[pre_ops]/UpdateWeight[0]/SymmetricQuantizer[op]/symmetric_quantize" -> "197 MobileNetV2/Sequential[features]/InvertedResidual[14]/Sequential[conv]/NNCFConv2d[2]/conv2d";
"197 MobileNetV2/Sequential[features]/InvertedResidual[14]/Sequential[conv]/NNCFConv2d[2]/conv2d" -> "198 MobileNetV2/Sequential[features]/InvertedResidual[14]/Sequential[conv]/BatchNorm2d[3]/batch_norm";
"198 MobileNetV2/Sequential[features]/InvertedResidual[14]/Sequential[conv]/BatchNorm2d[3]/batch_norm" -> "199 MobileNetV2/Sequential[features]/InvertedResidual[14]/Sequential[conv]/BatchNorm2d[3]/SymmetricQuantizer/symmetric_quantize";
"199 MobileNetV2/Sequential[features]/InvertedResidual[14]/Sequential[conv]/BatchNorm2d[3]/SymmetricQuantizer/symmetric_quantize" -> "201 MobileNetV2/Sequential[features]/InvertedResidual[15]/Sequential[conv]/ConvBNReLU[0]/NNCFConv2d[0]/conv2d";
"199 MobileNetV2/Sequential[features]/InvertedResidual[14]/Sequential[conv]/BatchNorm2d[3]/SymmetricQuantizer/symmetric_quantize" -> "213 MobileNetV2/Sequential[features]/InvertedResidual[15]/__add__";
"200 MobileNetV2/Sequential[features]/InvertedResidual[15]/Sequential[conv]/ConvBNReLU[0]/NNCFConv2d[0]/ModuleDict[pre_ops]/UpdateWeight[0]/SymmetricQuantizer[op]/symmetric_quantize" -> "201 MobileNetV2/Sequential[features]/InvertedResidual[15]/Sequential[conv]/ConvBNReLU[0]/NNCFConv2d[0]/conv2d";
"201 MobileNetV2/Sequential[features]/InvertedResidual[15]/Sequential[conv]/ConvBNReLU[0]/NNCFConv2d[0]/conv2d" -> "202 MobileNetV2/Sequential[features]/InvertedResidual[15]/Sequential[conv]/ConvBNReLU[0]/BatchNorm2d[1]/batch_norm";
"202 MobileNetV2/Sequential[features]/InvertedResidual[15]/Sequential[conv]/ConvBNReLU[0]/BatchNorm2d[1]/batch_norm" -> "203 MobileNetV2/Sequential[features]/InvertedResidual[15]/Sequential[conv]/ConvBNReLU[0]/ReLU6[2]/hardtanh";
"203 MobileNetV2/Sequential[features]/InvertedResidual[15]/Sequential[conv]/ConvBNReLU[0]/ReLU6[2]/hardtanh" -> "204 MobileNetV2/Sequential[features]/InvertedResidual[15]/Sequential[conv]/ConvBNReLU[0]/ReLU6[2]/SymmetricQuantizer/symmetric_quantize";
"204 MobileNetV2/Sequential[features]/InvertedResidual[15]/Sequential[conv]/ConvBNReLU[0]/ReLU6[2]/SymmetricQuantizer/symmetric_quantize" -> "206 MobileNetV2/Sequential[features]/InvertedResidual[15]/Sequential[conv]/ConvBNReLU[1]/NNCFConv2d[0]/conv2d";
"205 MobileNetV2/Sequential[features]/InvertedResidual[15]/Sequential[conv]/ConvBNReLU[1]/NNCFConv2d[0]/ModuleDict[pre_ops]/UpdateWeight[0]/SymmetricQuantizer[op]/symmetric_quantize" -> "206 MobileNetV2/Sequential[features]/InvertedResidual[15]/Sequential[conv]/ConvBNReLU[1]/NNCFConv2d[0]/conv2d";
"206 MobileNetV2/Sequential[features]/InvertedResidual[15]/Sequential[conv]/ConvBNReLU[1]/NNCFConv2d[0]/conv2d" -> "207 MobileNetV2/Sequential[features]/InvertedResidual[15]/Sequential[conv]/ConvBNReLU[1]/BatchNorm2d[1]/batch_norm";
"207 MobileNetV2/Sequential[features]/InvertedResidual[15]/Sequential[conv]/ConvBNReLU[1]/BatchNorm2d[1]/batch_norm" -> "208 MobileNetV2/Sequential[features]/InvertedResidual[15]/Sequential[conv]/ConvBNReLU[1]/ReLU6[2]/hardtanh";
"208 MobileNetV2/Sequential[features]/InvertedResidual[15]/Sequential[conv]/ConvBNReLU[1]/ReLU6[2]/hardtanh" -> "210 MobileNetV2/Sequential[features]/InvertedResidual[15]/Sequential[conv]/NNCFConv2d[2]/conv2d";
"209 MobileNetV2/Sequential[features]/InvertedResidual[15]/Sequential[conv]/NNCFConv2d[2]/ModuleDict[pre_ops]/UpdateWeight[0]/SymmetricQuantizer[op]/symmetric_quantize" -> "210 MobileNetV2/Sequential[features]/InvertedResidual[15]/Sequential[conv]/NNCFConv2d[2]/conv2d";
"210 MobileNetV2/Sequential[features]/InvertedResidual[15]/Sequential[conv]/NNCFConv2d[2]/conv2d" -> "211 MobileNetV2/Sequential[features]/InvertedResidual[15]/Sequential[conv]/BatchNorm2d[3]/batch_norm";
"211 MobileNetV2/Sequential[features]/InvertedResidual[15]/Sequential[conv]/BatchNorm2d[3]/batch_norm" -> "212 MobileNetV2/Sequential[features]/InvertedResidual[15]/Sequential[conv]/BatchNorm2d[3]/SymmetricQuantizer/symmetric_quantize";
"212 MobileNetV2/Sequential[features]/InvertedResidual[15]/Sequential[conv]/BatchNorm2d[3]/SymmetricQuantizer/symmetric_quantize" -> "213 MobileNetV2/Sequential[features]/InvertedResidual[15]/__add__";
"213 MobileNetV2/Sequential[features]/InvertedResidual[15]/__add__" -> "214 MobileNetV2/Sequential[features]/InvertedResidual[15]/SymmetricQuantizer/symmetric_quantize";
"214 MobileNetV2/Sequential[features]/InvertedResidual[15]/SymmetricQuantizer/symmetric_quantize" -> "216 MobileNetV2/Sequential[features]/InvertedResidual[16]/Sequential[conv]/ConvBNReLU[0]/NNCFConv2d[0]/conv2d";
"214 MobileNetV2/Sequential[features]/InvertedResidual[15]/SymmetricQuantizer/symmetric_quantize" -> "228 MobileNetV2/Sequential[features]/InvertedResidual[16]/__add__";
"215 MobileNetV2/Sequential[features]/InvertedResidual[16]/Sequential[conv]/ConvBNReLU[0]/NNCFConv2d[0]/ModuleDict[pre_ops]/UpdateWeight[0]/SymmetricQuantizer[op]/symmetric_quantize" -> "216 MobileNetV2/Sequential[features]/InvertedResidual[16]/Sequential[conv]/ConvBNReLU[0]/NNCFConv2d[0]/conv2d";
"216 MobileNetV2/Sequential[features]/InvertedResidual[16]/Sequential[conv]/ConvBNReLU[0]/NNCFConv2d[0]/conv2d" -> "217 MobileNetV2/Sequential[features]/InvertedResidual[16]/Sequential[conv]/ConvBNReLU[0]/BatchNorm2d[1]/batch_norm";
"217 MobileNetV2/Sequential[features]/InvertedResidual[16]/Sequential[conv]/ConvBNReLU[0]/BatchNorm2d[1]/batch_norm" -> "218 MobileNetV2/Sequential[features]/InvertedResidual[16]/Sequential[conv]/ConvBNReLU[0]/ReLU6[2]/hardtanh";
"218 MobileNetV2/Sequential[features]/InvertedResidual[16]/Sequential[conv]/ConvBNReLU[0]/ReLU6[2]/hardtanh" -> "219 MobileNetV2/Sequential[features]/InvertedResidual[16]/Sequential[conv]/ConvBNReLU[0]/ReLU6[2]/SymmetricQuantizer/symmetric_quantize";
"219 MobileNetV2/Sequential[features]/InvertedResidual[16]/Sequential[conv]/ConvBNReLU[0]/ReLU6[2]/SymmetricQuantizer/symmetric_quantize" -> "221 MobileNetV2/Sequential[features]/InvertedResidual[16]/Sequential[conv]/ConvBNReLU[1]/NNCFConv2d[0]/conv2d";
"220 MobileNetV2/Sequential[features]/InvertedResidual[16]/Sequential[conv]/ConvBNReLU[1]/NNCFConv2d[0]/ModuleDict[pre_ops]/UpdateWeight[0]/SymmetricQuantizer[op]/symmetric_quantize" -> "221 MobileNetV2/Sequential[features]/InvertedResidual[16]/Sequential[conv]/ConvBNReLU[1]/NNCFConv2d[0]/conv2d";
"221 MobileNetV2/Sequential[features]/InvertedResidual[16]/Sequential[conv]/ConvBNReLU[1]/NNCFConv2d[0]/conv2d" -> "222 MobileNetV2/Sequential[features]/InvertedResidual[16]/Sequential[conv]/ConvBNReLU[1]/BatchNorm2d[1]/batch_norm";
"222 MobileNetV2/Sequential[features]/InvertedResidual[16]/Sequential[conv]/ConvBNReLU[1]/BatchNorm2d[1]/batch_norm" -> "223 MobileNetV2/Sequential[features]/InvertedResidual[16]/Sequential[conv]/ConvBNReLU[1]/ReLU6[2]/hardtanh";
"223 MobileNetV2/Sequential[features]/InvertedResidual[16]/Sequential[conv]/ConvBNReLU[1]/ReLU6[2]/hardtanh" -> "225 MobileNetV2/Sequential[features]/InvertedResidual[16]/Sequential[conv]/NNCFConv2d[2]/conv2d";
"224 MobileNetV2/Sequential[features]/InvertedResidual[16]/Sequential[conv]/NNCFConv2d[2]/ModuleDict[pre_ops]/UpdateWeight[0]/SymmetricQuantizer[op]/symmetric_quantize" -> "225 MobileNetV2/Sequential[features]/InvertedResidual[16]/Sequential[conv]/NNCFConv2d[2]/conv2d";
"225 MobileNetV2/Sequential[features]/InvertedResidual[16]/Sequential[conv]/NNCFConv2d[2]/conv2d" -> "226 MobileNetV2/Sequential[features]/InvertedResidual[16]/Sequential[conv]/BatchNorm2d[3]/batch_norm";
"226 MobileNetV2/Sequential[features]/InvertedResidual[16]/Sequential[conv]/BatchNorm2d[3]/batch_norm" -> "227 MobileNetV2/Sequential[features]/InvertedResidual[16]/Sequential[conv]/BatchNorm2d[3]/SymmetricQuantizer/symmetric_quantize";
"227 MobileNetV2/Sequential[features]/InvertedResidual[16]/Sequential[conv]/BatchNorm2d[3]/SymmetricQuantizer/symmetric_quantize" -> "228 MobileNetV2/Sequential[features]/InvertedResidual[16]/__add__";
"228 MobileNetV2/Sequential[features]/InvertedResidual[16]/__add__" -> "229 MobileNetV2/Sequential[features]/InvertedResidual[16]/SymmetricQuantizer/symmetric_quantize";
"229 MobileNetV2/Sequential[features]/InvertedResidual[16]/SymmetricQuantizer/symmetric_quantize" -> "231 MobileNetV2/Sequential[features]/InvertedResidual[17]/Sequential[conv]/ConvBNReLU[0]/NNCFConv2d[0]/conv2d";
"230 MobileNetV2/Sequential[features]/InvertedResidual[17]/Sequential[conv]/ConvBNReLU[0]/NNCFConv2d[0]/ModuleDict[pre_ops]/UpdateWeight[0]/SymmetricQuantizer[op]/symmetric_quantize" -> "231 MobileNetV2/Sequential[features]/InvertedResidual[17]/Sequential[conv]/ConvBNReLU[0]/NNCFConv2d[0]/conv2d";
"231 MobileNetV2/Sequential[features]/InvertedResidual[17]/Sequential[conv]/ConvBNReLU[0]/NNCFConv2d[0]/conv2d" -> "232 MobileNetV2/Sequential[features]/InvertedResidual[17]/Sequential[conv]/ConvBNReLU[0]/BatchNorm2d[1]/batch_norm";
"232 MobileNetV2/Sequential[features]/InvertedResidual[17]/Sequential[conv]/ConvBNReLU[0]/BatchNorm2d[1]/batch_norm" -> "233 MobileNetV2/Sequential[features]/InvertedResidual[17]/Sequential[conv]/ConvBNReLU[0]/ReLU6[2]/hardtanh";
"233 MobileNetV2/Sequential[features]/InvertedResidual[17]/Sequential[conv]/ConvBNReLU[0]/ReLU6[2]/hardtanh" -> "234 MobileNetV2/Sequential[features]/InvertedResidual[17]/Sequential[conv]/ConvBNReLU[0]/ReLU6[2]/SymmetricQuantizer/symmetric_quantize";
"234 MobileNetV2/Sequential[features]/InvertedResidual[17]/Sequential[conv]/ConvBNReLU[0]/ReLU6[2]/SymmetricQuantizer/symmetric_quantize" -> "236 MobileNetV2/Sequential[features]/InvertedResidual[17]/Sequential[conv]/ConvBNReLU[1]/NNCFConv2d[0]/conv2d";
"235 MobileNetV2/Sequential[features]/InvertedResidual[17]/Sequential[conv]/ConvBNReLU[1]/NNCFConv2d[0]/ModuleDict[pre_ops]/UpdateWeight[0]/SymmetricQuantizer[op]/symmetric_quantize" -> "236 MobileNetV2/Sequential[features]/InvertedResidual[17]/Sequential[conv]/ConvBNReLU[1]/NNCFConv2d[0]/conv2d";
"236 MobileNetV2/Sequential[features]/InvertedResidual[17]/Sequential[conv]/ConvBNReLU[1]/NNCFConv2d[0]/conv2d" -> "237 MobileNetV2/Sequential[features]/InvertedResidual[17]/Sequential[conv]/ConvBNReLU[1]/BatchNorm2d[1]/batch_norm";
"237 MobileNetV2/Sequential[features]/InvertedResidual[17]/Sequential[conv]/ConvBNReLU[1]/BatchNorm2d[1]/batch_norm" -> "238 MobileNetV2/Sequential[features]/InvertedResidual[17]/Sequential[conv]/ConvBNReLU[1]/ReLU6[2]/hardtanh";
"238 MobileNetV2/Sequential[features]/InvertedResidual[17]/Sequential[conv]/ConvBNReLU[1]/ReLU6[2]/hardtanh" -> "240 MobileNetV2/Sequential[features]/InvertedResidual[17]/Sequential[conv]/NNCFConv2d[2]/conv2d";
"239 MobileNetV2/Sequential[features]/InvertedResidual[17]/Sequential[conv]/NNCFConv2d[2]/ModuleDict[pre_ops]/UpdateWeight[0]/SymmetricQuantizer[op]/symmetric_quantize" -> "240 MobileNetV2/Sequential[features]/InvertedResidual[17]/Sequential[conv]/NNCFConv2d[2]/conv2d";
"240 MobileNetV2/Sequential[features]/InvertedResidual[17]/Sequential[conv]/NNCFConv2d[2]/conv2d" -> "241 MobileNetV2/Sequential[features]/InvertedResidual[17]/Sequential[conv]/BatchNorm2d[3]/batch_norm";
"241 MobileNetV2/Sequential[features]/InvertedResidual[17]/Sequential[conv]/BatchNorm2d[3]/batch_norm" -> "242 MobileNetV2/Sequential[features]/InvertedResidual[17]/Sequential[conv]/BatchNorm2d[3]/SymmetricQuantizer/symmetric_quantize";
"242 MobileNetV2/Sequential[features]/InvertedResidual[17]/Sequential[conv]/BatchNorm2d[3]/SymmetricQuantizer/symmetric_quantize" -> "244 MobileNetV2/Sequential[features]/ConvBNReLU[18]/NNCFConv2d[0]/conv2d";
"243 MobileNetV2/Sequential[features]/ConvBNReLU[18]/NNCFConv2d[0]/ModuleDict[pre_ops]/UpdateWeight[0]/SymmetricQuantizer[op]/symmetric_quantize" -> "244 MobileNetV2/Sequential[features]/ConvBNReLU[18]/NNCFConv2d[0]/conv2d";
"244 MobileNetV2/Sequential[features]/ConvBNReLU[18]/NNCFConv2d[0]/conv2d" -> "245 MobileNetV2/Sequential[features]/ConvBNReLU[18]/BatchNorm2d[1]/batch_norm";
"245 MobileNetV2/Sequential[features]/ConvBNReLU[18]/BatchNorm2d[1]/batch_norm" -> "246 MobileNetV2/Sequential[features]/ConvBNReLU[18]/ReLU6[2]/hardtanh";
"246 MobileNetV2/Sequential[features]/ConvBNReLU[18]/ReLU6[2]/hardtanh" -> "247 MobileNetV2/Sequential[features]/ConvBNReLU[18]/ReLU6[2]/SymmetricQuantizer/symmetric_quantize";
"247 MobileNetV2/Sequential[features]/ConvBNReLU[18]/ReLU6[2]/SymmetricQuantizer/symmetric_quantize" -> "248 MobileNetV2/adaptive_avg_pool2d";
"248 MobileNetV2/adaptive_avg_pool2d" -> "249 MobileNetV2/Sequential[classifier]/Dropout[0]/dropout";
"249 MobileNetV2/Sequential[classifier]/Dropout[0]/dropout" -> "251 MobileNetV2/Sequential[classifier]/NNCFLinear[1]/linear";
"250 MobileNetV2/Sequential[classifier]/NNCFLinear[1]/ModuleDict[pre_ops]/UpdateWeight[0]/SymmetricQuantizer[op]/symmetric_quantize" -> "251 MobileNetV2/Sequential[classifier]/NNCFLinear[1]/linear";
}
